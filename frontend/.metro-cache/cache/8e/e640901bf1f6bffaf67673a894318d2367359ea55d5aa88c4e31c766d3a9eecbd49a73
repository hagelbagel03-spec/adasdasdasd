{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":57,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getDevicePushTokenAsync;\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[1], \"expo-constants\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  async function getDevicePushTokenAsync() {\n    const data = await _subscribeDeviceToPushNotificationsAsync();\n    _DeviceEventEmitter.default.emit('onDevicePushToken', {\n      devicePushToken: data\n    });\n    return {\n      type: _expoModulesCore.Platform.OS,\n      data\n    };\n  }\n  function guardPermission() {\n    if (!('Notification' in window)) {\n      throw new _expoModulesCore.CodedError('ERR_UNAVAILABLE', 'The Web Notifications API is not available on this device.');\n    }\n    if (!navigator.serviceWorker) {\n      throw new _expoModulesCore.CodedError('ERR_UNAVAILABLE', 'Notifications cannot be used because the service worker API is not supported on this device. This might also happen because your web page does not support HTTPS.');\n    }\n    if (Notification.permission !== 'granted') {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PERMISSION_DENIED', `Cannot use web notifications without permissions granted. Request permissions with \"expo-permissions\".`);\n    }\n  }\n  async function _subscribeDeviceToPushNotificationsAsync() {\n    // @ts-expect-error: TODO: not on the schema\n    const vapidPublicKey = _expoConstants.default.expoConfig?.notification?.vapidPublicKey;\n    if (!vapidPublicKey) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_WEB_MISSING_CONFIG', 'You must provide `notification.vapidPublicKey` in `app.json` to use push notifications on web. Learn more: https://docs.expo.dev/versions/latest/guides/using-vapid/.');\n    }\n    // @ts-expect-error: TODO: not on the schema\n    const serviceWorkerPath = _expoConstants.default.expoConfig?.notification?.serviceWorkerPath;\n    if (!serviceWorkerPath) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_MISSING_CONFIGURATION', 'You must specify `notification.serviceWorkerPath` in `app.json` to use push notifications on the web. Provide the path to the service worker that will handle notifications.');\n    }\n    guardPermission();\n    let registration = null;\n    try {\n      registration = await navigator.serviceWorker.register(serviceWorkerPath);\n    } catch (error) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', `Could not register this device for push notifications because the service worker (${serviceWorkerPath}) could not be registered: ${error}`);\n    }\n    await navigator.serviceWorker.ready;\n    if (!registration.active) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', 'Could not register this device for push notifications because the service worker is not active.');\n    }\n    const subscribeOptions = {\n      userVisibleOnly: true,\n      applicationServerKey: _urlBase64ToUint8Array(vapidPublicKey)\n    };\n    let pushSubscription = null;\n    try {\n      pushSubscription = await registration.pushManager.subscribe(subscribeOptions);\n    } catch (error) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_PUSH_REGISTRATION_FAILED', 'The device was unable to register for remote notifications with the browser endpoint. (' + error + ')');\n    }\n    const pushSubscriptionJson = pushSubscription.toJSON();\n    const subscriptionObject = {\n      endpoint: pushSubscriptionJson.endpoint,\n      keys: {\n        p256dh: pushSubscriptionJson.keys.p256dh,\n        auth: pushSubscriptionJson.keys.auth\n      }\n    };\n    // Store notification icon string in service worker.\n    // This message is received by `/expo-service-worker.js`.\n    // We wrap it with `fromExpoWebClient` to make sure other message\n    // will not override content such as `notificationIcon`.\n    // https://stackoverflow.com/a/35729334/2603230\n    const notificationIcon = (_expoConstants.default.expoConfig?.notification ?? {}).icon;\n    await registration.active.postMessage(JSON.stringify({\n      fromExpoWebClient: {\n        notificationIcon\n      }\n    }));\n    return subscriptionObject;\n  }\n  // https://github.com/web-push-libs/web-push#using-vapid-key-for-applicationserverkey\n  function _urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n});","lineCount":95,"map":[[7,2,1,0],[7,6,1,0,"_expoConstants"],[7,20,1,0],[7,23,1,0,"_interopRequireDefault"],[7,45,1,0],[7,46,1,0,"require"],[7,53,1,0],[7,54,1,0,"_dependencyMap"],[7,68,1,0],[8,2,2,0],[8,6,2,0,"_expoModulesCore"],[8,22,2,0],[8,25,2,0,"require"],[8,32,2,0],[8,33,2,0,"_dependencyMap"],[8,47,2,0],[9,2,2,57],[9,6,2,57,"_DeviceEventEmitter"],[9,25,2,57],[9,28,2,57,"_interopRequireDefault"],[9,50,2,57],[9,51,2,57,"require"],[9,58,2,57],[9,59,2,57,"_dependencyMap"],[9,73,2,57],[10,2,4,15],[10,17,4,30,"getDevicePushTokenAsync"],[10,40,4,53,"getDevicePushTokenAsync"],[10,41,4,53],[10,43,4,56],[11,4,5,4],[11,10,5,10,"data"],[11,14,5,14],[11,17,5,17],[11,23,5,23,"_subscribeDeviceToPushNotificationsAsync"],[11,63,5,63],[11,64,5,64],[11,65,5,65],[12,4,6,4,"DeviceEventEmitter"],[12,31,6,22],[12,32,6,23,"emit"],[12,36,6,27],[12,37,6,28],[12,56,6,47],[12,58,6,49],[13,6,6,51,"devicePushToken"],[13,21,6,66],[13,23,6,68,"data"],[14,4,6,73],[14,5,6,74],[14,6,6,75],[15,4,7,4],[15,11,7,11],[16,6,7,13,"type"],[16,10,7,17],[16,12,7,19,"Platform"],[16,37,7,27],[16,38,7,28,"OS"],[16,40,7,30],[17,6,7,32,"data"],[18,4,7,37],[18,5,7,38],[19,2,8,0],[20,2,9,0],[20,11,9,9,"guardPermission"],[20,26,9,24,"guardPermission"],[20,27,9,24],[20,29,9,27],[21,4,10,4],[21,8,10,8],[21,10,10,10],[21,24,10,24],[21,28,10,28,"window"],[21,34,10,34],[21,35,10,35],[21,37,10,37],[22,6,11,8],[22,12,11,14],[22,16,11,18,"CodedError"],[22,43,11,28],[22,44,11,29],[22,61,11,46],[22,63,11,48],[22,123,11,108],[22,124,11,109],[23,4,12,4],[24,4,13,4],[24,8,13,8],[24,9,13,9,"navigator"],[24,18,13,18],[24,19,13,19,"serviceWorker"],[24,32,13,32],[24,34,13,34],[25,6,14,8],[25,12,14,14],[25,16,14,18,"CodedError"],[25,43,14,28],[25,44,14,29],[25,61,14,46],[25,63,14,48],[25,226,14,211],[25,227,14,212],[26,4,15,4],[27,4,16,4],[27,8,16,8,"Notification"],[27,20,16,20],[27,21,16,21,"permission"],[27,31,16,31],[27,36,16,36],[27,45,16,45],[27,47,16,47],[28,6,17,8],[28,12,17,14],[28,16,17,18,"CodedError"],[28,43,17,28],[28,44,17,29],[28,81,17,66],[28,83,17,68],[28,187,17,172],[28,188,17,173],[29,4,18,4],[30,2,19,0],[31,2,20,0],[31,17,20,15,"_subscribeDeviceToPushNotificationsAsync"],[31,57,20,55,"_subscribeDeviceToPushNotificationsAsync"],[31,58,20,55],[31,60,20,58],[32,4,21,4],[33,4,22,4],[33,10,22,10,"vapidPublicKey"],[33,24,22,24],[33,27,22,27,"Constants"],[33,49,22,36],[33,50,22,37,"expoConfig"],[33,60,22,47],[33,62,22,49,"notification"],[33,74,22,61],[33,76,22,63,"vapidPublicKey"],[33,90,22,77],[34,4,23,4],[34,8,23,8],[34,9,23,9,"vapidPublicKey"],[34,23,23,23],[34,25,23,25],[35,6,24,8],[35,12,24,14],[35,16,24,18,"CodedError"],[35,43,24,28],[35,44,24,29],[35,87,24,72],[35,89,24,74],[35,256,24,241],[35,257,24,242],[36,4,25,4],[37,4,26,4],[38,4,27,4],[38,10,27,10,"serviceWorkerPath"],[38,27,27,27],[38,30,27,30,"Constants"],[38,52,27,39],[38,53,27,40,"expoConfig"],[38,63,27,50],[38,65,27,52,"notification"],[38,77,27,64],[38,79,27,66,"serviceWorkerPath"],[38,96,27,83],[39,4,28,4],[39,8,28,8],[39,9,28,9,"serviceWorkerPath"],[39,26,28,26],[39,28,28,28],[40,6,29,8],[40,12,29,14],[40,16,29,18,"CodedError"],[40,43,29,28],[40,44,29,29],[40,90,29,75],[40,92,29,77],[40,266,29,251],[40,267,29,252],[41,4,30,4],[42,4,31,4,"guardPermission"],[42,19,31,19],[42,20,31,20],[42,21,31,21],[43,4,32,4],[43,8,32,8,"registration"],[43,20,32,20],[43,23,32,23],[43,27,32,27],[44,4,33,4],[44,8,33,8],[45,6,34,8,"registration"],[45,18,34,20],[45,21,34,23],[45,27,34,29,"navigator"],[45,36,34,38],[45,37,34,39,"serviceWorker"],[45,50,34,52],[45,51,34,53,"register"],[45,59,34,61],[45,60,34,62,"serviceWorkerPath"],[45,77,34,79],[45,78,34,80],[46,4,35,4],[46,5,35,5],[46,6,36,4],[46,13,36,11,"error"],[46,18,36,16],[46,20,36,18],[47,6,37,8],[47,12,37,14],[47,16,37,18,"CodedError"],[47,43,37,28],[47,44,37,29],[47,88,37,73],[47,90,37,75],[47,175,37,160,"serviceWorkerPath"],[47,192,37,177],[47,222,37,207,"error"],[47,227,37,212],[47,229,37,214],[47,230,37,215],[48,4,38,4],[49,4,39,4],[49,10,39,10,"navigator"],[49,19,39,19],[49,20,39,20,"serviceWorker"],[49,33,39,33],[49,34,39,34,"ready"],[49,39,39,39],[50,4,40,4],[50,8,40,8],[50,9,40,9,"registration"],[50,21,40,21],[50,22,40,22,"active"],[50,28,40,28],[50,30,40,30],[51,6,41,8],[51,12,41,14],[51,16,41,18,"CodedError"],[51,43,41,28],[51,44,41,29],[51,88,41,73],[51,90,41,75],[51,187,41,172],[51,188,41,173],[52,4,42,4],[53,4,43,4],[53,10,43,10,"subscribeOptions"],[53,26,43,26],[53,29,43,29],[54,6,44,8,"userVisibleOnly"],[54,21,44,23],[54,23,44,25],[54,27,44,29],[55,6,45,8,"applicationServerKey"],[55,26,45,28],[55,28,45,30,"_urlBase64ToUint8Array"],[55,50,45,52],[55,51,45,53,"vapidPublicKey"],[55,65,45,67],[56,4,46,4],[56,5,46,5],[57,4,47,4],[57,8,47,8,"pushSubscription"],[57,24,47,24],[57,27,47,27],[57,31,47,31],[58,4,48,4],[58,8,48,8],[59,6,49,8,"pushSubscription"],[59,22,49,24],[59,25,49,27],[59,31,49,33,"registration"],[59,43,49,45],[59,44,49,46,"pushManager"],[59,55,49,57],[59,56,49,58,"subscribe"],[59,65,49,67],[59,66,49,68,"subscribeOptions"],[59,82,49,84],[59,83,49,85],[60,4,50,4],[60,5,50,5],[60,6,51,4],[60,13,51,11,"error"],[60,18,51,16],[60,20,51,18],[61,6,52,8],[61,12,52,14],[61,16,52,18,"CodedError"],[61,43,52,28],[61,44,52,29],[61,88,52,73],[61,90,52,75],[61,179,52,164],[61,182,53,12,"error"],[61,187,53,17],[61,190,54,12],[61,193,54,15],[61,194,54,16],[62,4,55,4],[63,4,56,4],[63,10,56,10,"pushSubscriptionJson"],[63,30,56,30],[63,33,56,33,"pushSubscription"],[63,49,56,49],[63,50,56,50,"toJSON"],[63,56,56,56],[63,57,56,57],[63,58,56,58],[64,4,57,4],[64,10,57,10,"subscriptionObject"],[64,28,57,28],[64,31,57,31],[65,6,58,8,"endpoint"],[65,14,58,16],[65,16,58,18,"pushSubscriptionJson"],[65,36,58,38],[65,37,58,39,"endpoint"],[65,45,58,47],[66,6,59,8,"keys"],[66,10,59,12],[66,12,59,14],[67,8,60,12,"p256dh"],[67,14,60,18],[67,16,60,20,"pushSubscriptionJson"],[67,36,60,40],[67,37,60,41,"keys"],[67,41,60,45],[67,42,60,46,"p256dh"],[67,48,60,52],[68,8,61,12,"auth"],[68,12,61,16],[68,14,61,18,"pushSubscriptionJson"],[68,34,61,38],[68,35,61,39,"keys"],[68,39,61,43],[68,40,61,44,"auth"],[69,6,62,8],[70,4,63,4],[70,5,63,5],[71,4,64,4],[72,4,65,4],[73,4,66,4],[74,4,67,4],[75,4,68,4],[76,4,69,4],[76,10,69,10,"notificationIcon"],[76,26,69,26],[76,29,69,29],[76,30,69,30,"Constants"],[76,52,69,39],[76,53,69,40,"expoConfig"],[76,63,69,50],[76,65,69,52,"notification"],[76,77,69,64],[76,81,69,68],[76,82,69,69],[76,83,69,70],[76,85,69,72,"icon"],[76,89,69,76],[77,4,70,4],[77,10,70,10,"registration"],[77,22,70,22],[77,23,70,23,"active"],[77,29,70,29],[77,30,70,30,"postMessage"],[77,41,70,41],[77,42,70,42,"JSON"],[77,46,70,46],[77,47,70,47,"stringify"],[77,56,70,56],[77,57,70,57],[78,6,70,59,"fromExpoWebClient"],[78,23,70,76],[78,25,70,78],[79,8,70,80,"notificationIcon"],[80,6,70,97],[81,4,70,99],[81,5,70,100],[81,6,70,101],[81,7,70,102],[82,4,71,4],[82,11,71,11,"subscriptionObject"],[82,29,71,29],[83,2,72,0],[84,2,73,0],[85,2,74,0],[85,11,74,9,"_urlBase64ToUint8Array"],[85,33,74,31,"_urlBase64ToUint8Array"],[85,34,74,32,"base64String"],[85,46,74,44],[85,48,74,46],[86,4,75,4],[86,10,75,10,"padding"],[86,17,75,17],[86,20,75,20],[86,23,75,23],[86,24,75,24,"repeat"],[86,30,75,30],[86,31,75,31],[86,32,75,32],[86,33,75,33],[86,36,75,37,"base64String"],[86,48,75,49],[86,49,75,50,"length"],[86,55,75,56],[86,58,75,59],[86,59,75,61],[86,63,75,65],[86,64,75,66],[86,65,75,67],[87,4,76,4],[87,10,76,10,"base64"],[87,16,76,16],[87,19,76,19],[87,20,76,20,"base64String"],[87,32,76,32],[87,35,76,35,"padding"],[87,42,76,42],[87,44,76,44,"replace"],[87,51,76,51],[87,52,76,52],[87,56,76,56],[87,58,76,58],[87,61,76,61],[87,62,76,62],[87,63,76,63,"replace"],[87,70,76,70],[87,71,76,71],[87,75,76,75],[87,77,76,77],[87,80,76,80],[87,81,76,81],[88,4,77,4],[88,10,77,10,"rawData"],[88,17,77,17],[88,20,77,20,"window"],[88,26,77,26],[88,27,77,27,"atob"],[88,31,77,31],[88,32,77,32,"base64"],[88,38,77,38],[88,39,77,39],[89,4,78,4],[89,10,78,10,"outputArray"],[89,21,78,21],[89,24,78,24],[89,28,78,28,"Uint8Array"],[89,38,78,38],[89,39,78,39,"rawData"],[89,46,78,46],[89,47,78,47,"length"],[89,53,78,53],[89,54,78,54],[90,4,79,4],[90,9,79,9],[90,13,79,13,"i"],[90,14,79,14],[90,17,79,17],[90,18,79,18],[90,20,79,20,"i"],[90,21,79,21],[90,24,79,24,"rawData"],[90,31,79,31],[90,32,79,32,"length"],[90,38,79,38],[90,40,79,40],[90,42,79,42,"i"],[90,43,79,43],[90,45,79,45],[91,6,80,8,"outputArray"],[91,17,80,19],[91,18,80,20,"i"],[91,19,80,21],[91,20,80,22],[91,23,80,25,"rawData"],[91,30,80,32],[91,31,80,33,"charCodeAt"],[91,41,80,43],[91,42,80,44,"i"],[91,43,80,45],[91,44,80,46],[92,4,81,4],[93,4,82,4],[93,11,82,11,"outputArray"],[93,22,82,22],[94,2,83,0],[95,0,83,1],[95,3]],"functionMap":{"names":["<global>","getDevicePushTokenAsync","guardPermission","_subscribeDeviceToPushNotificationsAsync","_urlBase64ToUint8Array"],"mappings":"AAA;eCG;CDI;AEC;CFU;AGC;CHoD;AIE;CJS"}},"type":"js/module"}]}