{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"]}},{"name":"./utils/mapNotificationResponse","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":73,"index":191}}],"key":"JkOfaen2LZL/eo5bIUuRnscMf0c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getAllScheduledNotificationsAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _NotificationScheduler = _interopRequireDefault(require(_dependencyMap[2], \"./NotificationScheduler\"));\n  var _mapNotificationResponse = require(_dependencyMap[3], \"./utils/mapNotificationResponse\");\n  /**\n   * Fetches information about all scheduled notifications.\n   * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n   * @header schedule\n   */\n  async function getAllScheduledNotificationsAsync() {\n    if (!_NotificationScheduler.default.getAllScheduledNotificationsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n    }\n    return (await _NotificationScheduler.default.getAllScheduledNotificationsAsync()).map(request => (0, _mapNotificationResponse.mapNotificationRequest)(request));\n  }\n});","lineCount":21,"map":[[7,2,1,0],[7,6,1,0,"_expoModulesCore"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_NotificationScheduler"],[8,28,2,0],[8,31,2,0,"_interopRequireDefault"],[8,53,2,0],[8,54,2,0,"require"],[8,61,2,0],[8,62,2,0,"_dependencyMap"],[8,76,2,0],[9,2,3,0],[9,6,3,0,"_mapNotificationResponse"],[9,30,3,0],[9,33,3,0,"require"],[9,40,3,0],[9,41,3,0,"_dependencyMap"],[9,55,3,0],[10,2,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,2,9,15],[15,17,9,30,"getAllScheduledNotificationsAsync"],[15,50,9,63,"getAllScheduledNotificationsAsync"],[15,51,9,63],[15,53,9,66],[16,4,10,4],[16,8,10,8],[16,9,10,9,"NotificationScheduler"],[16,39,10,30],[16,40,10,31,"getAllScheduledNotificationsAsync"],[16,73,10,64],[16,75,10,66],[17,6,11,8],[17,12,11,14],[17,16,11,18,"UnavailabilityError"],[17,52,11,37],[17,53,11,38],[17,68,11,53],[17,70,11,55],[17,105,11,90],[17,106,11,91],[18,4,12,4],[19,4,13,4],[19,11,13,11],[19,12,13,12],[19,18,13,18,"NotificationScheduler"],[19,48,13,39],[19,49,13,40,"getAllScheduledNotificationsAsync"],[19,82,13,73],[19,83,13,74],[19,84,13,75],[19,86,13,77,"map"],[19,89,13,80],[19,90,13,82,"request"],[19,97,13,89],[19,101,13,94],[19,105,13,94,"mapNotificationRequest"],[19,152,13,116],[19,154,13,117,"request"],[19,161,13,124],[19,162,13,125],[19,163,13,126],[20,2,14,0],[21,0,14,1],[21,3]],"functionMap":{"names":["<global>","getAllScheduledNotificationsAsync","map$argument_0"],"mappings":"AAA;eCQ;iFCI,4CD;CDC"}},"type":"js/module"}]}