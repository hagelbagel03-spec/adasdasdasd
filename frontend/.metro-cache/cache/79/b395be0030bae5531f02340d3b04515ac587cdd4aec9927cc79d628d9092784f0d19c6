{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationsHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":70,"index":160}}],"key":"UF+u43m6G1FFZlom/NfKv8+5frg=","exportNames":["*"]}},{"name":"./utils/mapNotificationResponse","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":66,"index":227}}],"key":"JkOfaen2LZL/eo5bIUuRnscMf0c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NotificationTimeoutError = void 0;\n  exports.setNotificationHandler = setNotificationHandler;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _NotificationsHandlerModule = _interopRequireDefault(require(_dependencyMap[2], \"./NotificationsHandlerModule\"));\n  var _mapNotificationResponse = require(_dependencyMap[3], \"./utils/mapNotificationResponse\");\n  /**\n   * @hidden\n   */\n  class NotificationTimeoutError extends _expoModulesCore.CodedError {\n    constructor(notificationId, notification) {\n      super('ERR_NOTIFICATION_TIMEOUT', `Notification handling timed out for ID ${notificationId}.`);\n      this.info = {\n        id: notificationId,\n        notification\n      };\n    }\n  }\n  // Web uses SyntheticEventEmitter\n  exports.NotificationTimeoutError = NotificationTimeoutError;\n  const notificationEmitter = new _expoModulesCore.LegacyEventEmitter(_NotificationsHandlerModule.default);\n  const handleNotificationEventName = 'onHandleNotification';\n  const handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\n  let handleSubscription = null;\n  let handleTimeoutSubscription = null;\n  /**\n   * When a notification is received while the app is running, using this function you can set a callback that will decide\n   * whether the notification should be shown to the user or not.\n   *\n   * When a notification is received, `handleNotification` is called with the incoming notification as an argument.\n   * The function should respond with a behavior object within 3 seconds, otherwise, the notification will be discarded.\n   * If the notification is handled successfully, `handleSuccess` is called with the identifier of the notification,\n   * otherwise (or on timeout) `handleError` will be called.\n   *\n   * The default behavior when the handler is not set or does not respond in time is not to show the notification.\n   * @param handler A single parameter which should be either `null` (if you want to clear the handler) or a [`NotificationHandler`](#notificationhandler) object.\n   *\n   * @example Implementing a notification handler that always shows the notification when it is received.\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   *\n   * Notifications.setNotificationHandler({\n   *   handleNotification: async () => ({\n   *     shouldShowBanner: true,\n   *     shouldShowList: true,\n   *     shouldPlaySound: false,\n   *     shouldSetBadge: false,\n   *   }),\n   * });\n   * ```\n   * @header inForeground\n   */\n  function setNotificationHandler(handler) {\n    if (handleSubscription) {\n      handleSubscription.remove();\n      handleSubscription = null;\n    }\n    if (handleTimeoutSubscription) {\n      handleTimeoutSubscription.remove();\n      handleTimeoutSubscription = null;\n    }\n    if (handler) {\n      handleSubscription = notificationEmitter.addListener(handleNotificationEventName, async ({\n        id,\n        notification\n      }) => {\n        if (!_NotificationsHandlerModule.default.handleNotificationAsync) {\n          handler.handleError?.(id, new _expoModulesCore.UnavailabilityError('Notifications', 'handleNotificationAsync'));\n          return;\n        }\n        try {\n          const mappedNotification = (0, _mapNotificationResponse.mapNotification)(notification);\n          const behavior = await handler.handleNotification(mappedNotification);\n          if (behavior.shouldShowAlert) {\n            console.warn('[expo-notifications]: `shouldShowAlert` is deprecated. Specify `shouldShowBanner` and / or `shouldShowList` instead.');\n          }\n          await _NotificationsHandlerModule.default.handleNotificationAsync(id, behavior);\n          handler.handleSuccess?.(id);\n        } catch (error) {\n          // TODO(@kitten): This callback expects specific Error types, but we never narrow the type before calling this callback\n          handler.handleError?.(id, error);\n        }\n      });\n      handleTimeoutSubscription = notificationEmitter.addListener(handleNotificationTimeoutEventName, ({\n        id,\n        notification\n      }) => handler.handleError?.(id, new NotificationTimeoutError(id, (0, _mapNotificationResponse.mapNotification)(notification))));\n    }\n  }\n});","lineCount":94,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_NotificationsHandlerModule"],[9,33,2,0],[9,36,2,0,"_interopRequireDefault"],[9,58,2,0],[9,59,2,0,"require"],[9,66,2,0],[9,67,2,0,"_dependencyMap"],[9,81,2,0],[10,2,3,0],[10,6,3,0,"_mapNotificationResponse"],[10,30,3,0],[10,33,3,0,"require"],[10,40,3,0],[10,41,3,0,"_dependencyMap"],[10,55,3,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[14,2,7,7],[14,8,7,13,"NotificationTimeoutError"],[14,32,7,37],[14,41,7,46,"CodedError"],[14,68,7,56],[14,69,7,57],[15,4,9,4,"constructor"],[15,15,9,15,"constructor"],[15,16,9,16,"notificationId"],[15,30,9,30],[15,32,9,32,"notification"],[15,44,9,44],[15,46,9,46],[16,6,10,8],[16,11,10,13],[16,12,10,14],[16,38,10,40],[16,40,10,42],[16,82,10,84,"notificationId"],[16,96,10,98],[16,99,10,101],[16,100,10,102],[17,6,11,8],[17,10,11,12],[17,11,11,13,"info"],[17,15,11,17],[17,18,11,20],[18,8,11,22,"id"],[18,10,11,24],[18,12,11,26,"notificationId"],[18,26,11,40],[19,8,11,42,"notification"],[20,6,11,55],[20,7,11,56],[21,4,12,4],[22,2,13,0],[23,2,14,0],[24,2,14,0,"exports"],[24,9,14,0],[24,10,14,0,"NotificationTimeoutError"],[24,34,14,0],[24,37,14,0,"NotificationTimeoutError"],[24,61,14,0],[25,2,15,0],[25,8,15,6,"notificationEmitter"],[25,27,15,25],[25,30,15,28],[25,34,15,32,"LegacyEventEmitter"],[25,69,15,50],[25,70,15,51,"NotificationsHandlerModule"],[25,105,15,77],[25,106,15,78],[26,2,16,0],[26,8,16,6,"handleNotificationEventName"],[26,35,16,33],[26,38,16,36],[26,60,16,58],[27,2,17,0],[27,8,17,6,"handleNotificationTimeoutEventName"],[27,42,17,40],[27,45,17,43],[27,74,17,72],[28,2,18,0],[28,6,18,4,"handleSubscription"],[28,24,18,22],[28,27,18,25],[28,31,18,29],[29,2,19,0],[29,6,19,4,"handleTimeoutSubscription"],[29,31,19,29],[29,34,19,32],[29,38,19,36],[30,2,20,0],[31,0,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[35,0,25,0],[36,0,26,0],[37,0,27,0],[38,0,28,0],[39,0,29,0],[40,0,30,0],[41,0,31,0],[42,0,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,0,40,0],[51,0,41,0],[52,0,42,0],[53,0,43,0],[54,0,44,0],[55,0,45,0],[56,0,46,0],[57,2,47,7],[57,11,47,16,"setNotificationHandler"],[57,33,47,38,"setNotificationHandler"],[57,34,47,39,"handler"],[57,41,47,46],[57,43,47,48],[58,4,48,4],[58,8,48,8,"handleSubscription"],[58,26,48,26],[58,28,48,28],[59,6,49,8,"handleSubscription"],[59,24,49,26],[59,25,49,27,"remove"],[59,31,49,33],[59,32,49,34],[59,33,49,35],[60,6,50,8,"handleSubscription"],[60,24,50,26],[60,27,50,29],[60,31,50,33],[61,4,51,4],[62,4,52,4],[62,8,52,8,"handleTimeoutSubscription"],[62,33,52,33],[62,35,52,35],[63,6,53,8,"handleTimeoutSubscription"],[63,31,53,33],[63,32,53,34,"remove"],[63,38,53,40],[63,39,53,41],[63,40,53,42],[64,6,54,8,"handleTimeoutSubscription"],[64,31,54,33],[64,34,54,36],[64,38,54,40],[65,4,55,4],[66,4,56,4],[66,8,56,8,"handler"],[66,15,56,15],[66,17,56,17],[67,6,57,8,"handleSubscription"],[67,24,57,26],[67,27,57,29,"notificationEmitter"],[67,46,57,48],[67,47,57,49,"addListener"],[67,58,57,60],[67,59,57,61,"handleNotificationEventName"],[67,86,57,88],[67,88,57,90],[67,95,57,97],[68,8,57,99,"id"],[68,10,57,101],[69,8,57,103,"notification"],[70,6,57,116],[70,7,57,117],[70,12,57,122],[71,8,58,12],[71,12,58,16],[71,13,58,17,"NotificationsHandlerModule"],[71,48,58,43],[71,49,58,44,"handleNotificationAsync"],[71,72,58,67],[71,74,58,69],[72,10,59,16,"handler"],[72,17,59,23],[72,18,59,24,"handleError"],[72,29,59,35],[72,32,59,38,"id"],[72,34,59,40],[72,36,59,42],[72,40,59,46,"UnavailabilityError"],[72,76,59,65],[72,77,59,66],[72,92,59,81],[72,94,59,83],[72,119,59,108],[72,120,59,109],[72,121,59,110],[73,10,60,16],[74,8,61,12],[75,8,62,12],[75,12,62,16],[76,10,63,16],[76,16,63,22,"mappedNotification"],[76,34,63,40],[76,37,63,43],[76,41,63,43,"mapNotification"],[76,81,63,58],[76,83,63,59,"notification"],[76,95,63,71],[76,96,63,72],[77,10,64,16],[77,16,64,22,"behavior"],[77,24,64,30],[77,27,64,33],[77,33,64,39,"handler"],[77,40,64,46],[77,41,64,47,"handleNotification"],[77,59,64,65],[77,60,64,66,"mappedNotification"],[77,78,64,84],[77,79,64,85],[78,10,65,16],[78,14,65,20,"behavior"],[78,22,65,28],[78,23,65,29,"shouldShowAlert"],[78,38,65,44],[78,40,65,46],[79,12,66,20,"console"],[79,19,66,27],[79,20,66,28,"warn"],[79,24,66,32],[79,25,66,33],[79,143,66,151],[79,144,66,152],[80,10,67,16],[81,10,68,16],[81,16,68,22,"NotificationsHandlerModule"],[81,51,68,48],[81,52,68,49,"handleNotificationAsync"],[81,75,68,72],[81,76,68,73,"id"],[81,78,68,75],[81,80,68,77,"behavior"],[81,88,68,85],[81,89,68,86],[82,10,69,16,"handler"],[82,17,69,23],[82,18,69,24,"handleSuccess"],[82,31,69,37],[82,34,69,40,"id"],[82,36,69,42],[82,37,69,43],[83,8,70,12],[83,9,70,13],[83,10,71,12],[83,17,71,19,"error"],[83,22,71,24],[83,24,71,26],[84,10,72,16],[85,10,73,16,"handler"],[85,17,73,23],[85,18,73,24,"handleError"],[85,29,73,35],[85,32,73,38,"id"],[85,34,73,40],[85,36,73,42,"error"],[85,41,73,47],[85,42,73,48],[86,8,74,12],[87,6,75,8],[87,7,75,9],[87,8,75,10],[88,6,76,8,"handleTimeoutSubscription"],[88,31,76,33],[88,34,76,36,"notificationEmitter"],[88,53,76,55],[88,54,76,56,"addListener"],[88,65,76,67],[88,66,76,68,"handleNotificationTimeoutEventName"],[88,100,76,102],[88,102,76,104],[88,103,76,105],[89,8,76,107,"id"],[89,10,76,109],[90,8,76,111,"notification"],[91,6,76,124],[91,7,76,125],[91,12,76,130,"handler"],[91,19,76,137],[91,20,76,138,"handleError"],[91,31,76,149],[91,34,76,152,"id"],[91,36,76,154],[91,38,76,156],[91,42,76,160,"NotificationTimeoutError"],[91,66,76,184],[91,67,76,185,"id"],[91,69,76,187],[91,71,76,189],[91,75,76,189,"mapNotification"],[91,115,76,204],[91,117,76,205,"notification"],[91,129,76,217],[91,130,76,218],[91,131,76,219],[91,132,76,220],[91,133,76,221],[92,4,77,4],[93,2,78,0],[94,0,78,1],[94,3]],"functionMap":{"names":["<global>","NotificationTimeoutError","NotificationTimeoutError#constructor","setNotificationHandler","notificationEmitter.addListener$argument_1"],"mappings":"AAA;OCM;ICE;KDG;CDC;OGkC;0FCU;SDkB;wGCC,oHD;CHE"}},"type":"js/module"}]}