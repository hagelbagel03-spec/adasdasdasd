{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./Application.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":61,"index":128}}],"key":"94NQzNiUbrzQ/C41eA1ItenfrNg=","exportNames":["*"]}},{"name":"./ExpoApplication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":129},"end":{"line":3,"column":48,"index":177}}],"key":"sL6wKtcC+jxv0v0ps5/+iTBNQFA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"ApplicationReleaseType\", {\n    enumerable: true,\n    get: function () {\n      return _Application.ApplicationReleaseType;\n    }\n  });\n  exports.applicationName = exports.applicationId = void 0;\n  exports.getAndroidId = getAndroidId;\n  exports.getInstallReferrerAsync = getInstallReferrerAsync;\n  exports.getInstallationTimeAsync = getInstallationTimeAsync;\n  exports.getIosApplicationReleaseTypeAsync = getIosApplicationReleaseTypeAsync;\n  exports.getIosIdForVendorAsync = getIosIdForVendorAsync;\n  exports.getIosPushNotificationServiceEnvironmentAsync = getIosPushNotificationServiceEnvironmentAsync;\n  exports.getLastUpdateTimeAsync = getLastUpdateTimeAsync;\n  exports.nativeBuildVersion = exports.nativeApplicationVersion = void 0;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _Application = require(_dependencyMap[2], \"./Application.types\");\n  var _ExpoApplication = _interopRequireDefault(require(_dependencyMap[3], \"./ExpoApplication\"));\n  // @needsAudit\n  /**\n   * The human-readable version of the native application that may be displayed in the app store.\n   * At time when native app is built, on Android, this is the version name set by `version`\n   * in app config, and on iOS, the `Info.plist` value for `CFBundleShortVersionString`.\n   * On web, this value is `null`.\n   * @example\n   * `\"2.11.0\"`\n   */\n  const nativeApplicationVersion = exports.nativeApplicationVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeApplicationVersion || null : null;\n  // @needsAudit\n  /**\n   * The internal build version of the native application that the app stores may use to distinguish\n   * between different binaries. At the time when native app is built, On Android, this is the version\n   * code set by `android.versionCode` in app config, and on iOS, the `Info.plist` value for\n   * `CFBundleVersion` (set with `ios.buildNumber` value in app config in a standalone app).\n   * On web, this value is `null`. The return type on Android and iOS is `string`.\n   * @example\n   * `\"114\"`\n   */\n  const nativeBuildVersion = exports.nativeBuildVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeBuildVersion || null : null;\n  // @needsAudit\n  /**\n   * The human-readable name of the application that is displayed with the app's icon on the device's\n   * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\n   * retrieved, in which case this value will be `null`. On web this value is `null`.\n   * @example\n   * `\"Expo\"`, `\"Yelp\"`, `\"Instagram\"`\n   */\n  const applicationName = exports.applicationName = _ExpoApplication.default ? _ExpoApplication.default.applicationName || null : null;\n  // @needsAudit\n  /**\n   * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\n   * On web, this is `null`.\n   * @example\n   * `\"com.cocoacasts.scribbles\"`, `\"com.apple.Pages\"`\n   */\n  const applicationId = exports.applicationId = _ExpoApplication.default ? _ExpoApplication.default.applicationId || null : null;\n  // @needsAudit\n  /**\n   * Gets the value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\n   * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\n   * The value may change if a factory reset is performed on the device or if an APK signing key changes.\n   * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\n   * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\n   * On iOS and web, this function is unavailable.\n   * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\n   * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\n   * > official docs for more information.\n   * @example\n   * `\"dd96dec43fb81c97\"`\n   * @platform android\n   */\n  function getAndroidId() {\n    if (_expoModulesCore.Platform.OS !== 'android') {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'androidId');\n    }\n    return _ExpoApplication.default.androidId;\n  }\n  // @needsAudit\n  /**\n   * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\n   * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.\n   * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\n   *\n   * @example\n   * ```ts\n   * await Application.getInstallReferrerAsync();\n   * // \"utm_source=google-play&utm_medium=organic\"\n   * ```\n   * @platform android\n   */\n  async function getInstallReferrerAsync() {\n    if (!_ExpoApplication.default.getInstallReferrerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n    }\n    return await _ExpoApplication.default.getInstallReferrerAsync();\n  }\n  // @needsAudit\n  /**\n   * Gets the iOS \"identifier for vendor\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\n   * value, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may\n   * sometimes return `nil`, in which case wait and call the method again later. This might happen\n   * when the device has been restarted before the user has unlocked the device.\n   *\n   * The OS will change the vendor identifier if all apps from the current app's vendor have been\n   * uninstalled.\n   *\n   * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the\n   * same vendor will return the same ID. See Apple's documentation for more information about the\n   * vendor ID's semantics.\n   *\n   * @example\n   * ```ts\n   * await Application.getIosIdForVendorAsync();\n   * // \"68753A44-4D6F-1226-9C60-0050E4C00067\"\n   * ```\n   * @platform ios\n   */\n  async function getIosIdForVendorAsync() {\n    if (!_ExpoApplication.default.getIosIdForVendorAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n    }\n    return await _ExpoApplication.default.getIosIdForVendorAsync();\n  }\n  // @needsAudit\n  /**\n   * Gets the iOS application release type.\n   * @return A `Promise` which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\n   * @platform ios\n   */\n  async function getIosApplicationReleaseTypeAsync() {\n    if (!_ExpoApplication.default.getApplicationReleaseTypeAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n    }\n    return await _ExpoApplication.default.getApplicationReleaseTypeAsync();\n  }\n  // @needsAudit\n  /**\n   * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\n   * service environment.\n   * @return A `Promise` that fulfills with the string, either `'development'` or `'production'`,\n   * based on the current APN environment, or `null` on the simulator as it does not support registering with APNs.\n   * @platform ios\n   */\n  async function getIosPushNotificationServiceEnvironmentAsync() {\n    if (!_ExpoApplication.default.getPushNotificationServiceEnvironmentAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n    }\n    return await _ExpoApplication.default.getPushNotificationServiceEnvironmentAsync();\n  }\n  // @needsAudit\n  /**\n   * Gets the time the app was installed onto the device, not counting subsequent updates. If the app\n   * is uninstalled and reinstalled, this method returns the time the app was reinstalled.\n   * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\n   * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\n   * of the app's document root directory.\n   * - On web, this method returns `null`.\n   *\n   * @return A `Promise` that fulfills with a `Date` object that specifies the time the app\n   * was installed on the device.\n   *\n   * @example\n   * ```ts\n   * await Application.getInstallationTimeAsync();\n   * // 2019-07-18T18:08:26.121Z\n   * ```\n   */\n  async function getInstallationTimeAsync() {\n    if (!_ExpoApplication.default.getInstallationTimeAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n    }\n    const installationTime = await _ExpoApplication.default.getInstallationTimeAsync();\n    return new Date(installationTime);\n  }\n  // @needsAudit\n  /**\n   * Gets the last time the app was updated from the Google Play Store.\n   * @return A `Promise` that fulfills with a `Date` object that specifies the last time\n   * the app was updated via the Google Play Store.\n   *\n   * @example\n   * ```ts\n   * await Application.getLastUpdateTimeAsync();\n   * // 2019-07-18T21:20:16.887Z\n   * ```\n   * @platform android\n   */\n  async function getLastUpdateTimeAsync() {\n    if (!_ExpoApplication.default.getLastUpdateTimeAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n    }\n    const lastUpdateTime = await _ExpoApplication.default.getLastUpdateTimeAsync();\n    return new Date(lastUpdateTime);\n  }\n});","lineCount":200,"map":[[21,2,1,0],[21,6,1,0,"_expoModulesCore"],[21,22,1,0],[21,25,1,0,"require"],[21,32,1,0],[21,33,1,0,"_dependencyMap"],[21,47,1,0],[22,2,2,0],[22,6,2,0,"_Application"],[22,18,2,0],[22,21,2,0,"require"],[22,28,2,0],[22,29,2,0,"_dependencyMap"],[22,43,2,0],[23,2,3,0],[23,6,3,0,"_ExpoApplication"],[23,22,3,0],[23,25,3,0,"_interopRequireDefault"],[23,47,3,0],[23,48,3,0,"require"],[23,55,3,0],[23,56,3,0,"_dependencyMap"],[23,70,3,0],[24,2,4,0],[25,2,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,0,9,0],[30,0,10,0],[31,0,11,0],[32,0,12,0],[33,2,13,7],[33,8,13,13,"nativeApplicationVersion"],[33,32,13,37],[33,35,13,37,"exports"],[33,42,13,37],[33,43,13,37,"nativeApplicationVersion"],[33,67,13,37],[33,70,13,40,"ExpoApplication"],[33,94,13,55],[33,97,14,6,"ExpoApplication"],[33,121,14,21],[33,122,14,22,"nativeApplicationVersion"],[33,146,14,46],[33,150,14,50],[33,154,14,54],[33,157,15,6],[33,161,15,10],[34,2,16,0],[35,2,17,0],[36,0,18,0],[37,0,19,0],[38,0,20,0],[39,0,21,0],[40,0,22,0],[41,0,23,0],[42,0,24,0],[43,0,25,0],[44,2,26,7],[44,8,26,13,"nativeBuildVersion"],[44,26,26,31],[44,29,26,31,"exports"],[44,36,26,31],[44,37,26,31,"nativeBuildVersion"],[44,55,26,31],[44,58,26,34,"ExpoApplication"],[44,82,26,49],[44,85,27,6,"ExpoApplication"],[44,109,27,21],[44,110,27,22,"nativeBuildVersion"],[44,128,27,40],[44,132,27,44],[44,136,27,48],[44,139,28,6],[44,143,28,10],[45,2,29,0],[46,2,30,0],[47,0,31,0],[48,0,32,0],[49,0,33,0],[50,0,34,0],[51,0,35,0],[52,0,36,0],[53,2,37,7],[53,8,37,13,"applicationName"],[53,23,37,28],[53,26,37,28,"exports"],[53,33,37,28],[53,34,37,28,"applicationName"],[53,49,37,28],[53,52,37,31,"ExpoApplication"],[53,76,37,46],[53,79,38,6,"ExpoApplication"],[53,103,38,21],[53,104,38,22,"applicationName"],[53,119,38,37],[53,123,38,41],[53,127,38,45],[53,130,39,6],[53,134,39,10],[54,2,40,0],[55,2,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,0,46,0],[61,2,47,7],[61,8,47,13,"applicationId"],[61,21,47,26],[61,24,47,26,"exports"],[61,31,47,26],[61,32,47,26,"applicationId"],[61,45,47,26],[61,48,47,29,"ExpoApplication"],[61,72,47,44],[61,75,48,6,"ExpoApplication"],[61,99,48,21],[61,100,48,22,"applicationId"],[61,113,48,35],[61,117,48,39],[61,121,48,43],[61,124,49,6],[61,128,49,10],[62,2,50,0],[63,2,51,0],[64,0,52,0],[65,0,53,0],[66,0,54,0],[67,0,55,0],[68,0,56,0],[69,0,57,0],[70,0,58,0],[71,0,59,0],[72,0,60,0],[73,0,61,0],[74,0,62,0],[75,0,63,0],[76,0,64,0],[77,2,65,7],[77,11,65,16,"getAndroidId"],[77,23,65,28,"getAndroidId"],[77,24,65,28],[77,26,65,31],[78,4,66,4],[78,8,66,8,"Platform"],[78,33,66,16],[78,34,66,17,"OS"],[78,36,66,19],[78,41,66,24],[78,50,66,33],[78,52,66,35],[79,6,67,8],[79,12,67,14],[79,16,67,18,"UnavailabilityError"],[79,52,67,37],[79,53,67,38],[79,71,67,56],[79,73,67,58],[79,84,67,69],[79,85,67,70],[80,4,68,4],[81,4,69,4],[81,11,69,11,"ExpoApplication"],[81,35,69,26],[81,36,69,27,"androidId"],[81,45,69,36],[82,2,70,0],[83,2,71,0],[84,2,72,0],[85,0,73,0],[86,0,74,0],[87,0,75,0],[88,0,76,0],[89,0,77,0],[90,0,78,0],[91,0,79,0],[92,0,80,0],[93,0,81,0],[94,0,82,0],[95,0,83,0],[96,2,84,7],[96,17,84,22,"getInstallReferrerAsync"],[96,40,84,45,"getInstallReferrerAsync"],[96,41,84,45],[96,43,84,48],[97,4,85,4],[97,8,85,8],[97,9,85,9,"ExpoApplication"],[97,33,85,24],[97,34,85,25,"getInstallReferrerAsync"],[97,57,85,48],[97,59,85,50],[98,6,86,8],[98,12,86,14],[98,16,86,18,"UnavailabilityError"],[98,52,86,37],[98,53,86,38],[98,71,86,56],[98,73,86,58],[98,98,86,83],[98,99,86,84],[99,4,87,4],[100,4,88,4],[100,11,88,11],[100,17,88,17,"ExpoApplication"],[100,41,88,32],[100,42,88,33,"getInstallReferrerAsync"],[100,65,88,56],[100,66,88,57],[100,67,88,58],[101,2,89,0],[102,2,90,0],[103,2,91,0],[104,0,92,0],[105,0,93,0],[106,0,94,0],[107,0,95,0],[108,0,96,0],[109,0,97,0],[110,0,98,0],[111,0,99,0],[112,0,100,0],[113,0,101,0],[114,0,102,0],[115,0,103,0],[116,0,104,0],[117,0,105,0],[118,0,106,0],[119,0,107,0],[120,0,108,0],[121,0,109,0],[122,0,110,0],[123,2,111,7],[123,17,111,22,"getIosIdForVendorAsync"],[123,39,111,44,"getIosIdForVendorAsync"],[123,40,111,44],[123,42,111,47],[124,4,112,4],[124,8,112,8],[124,9,112,9,"ExpoApplication"],[124,33,112,24],[124,34,112,25,"getIosIdForVendorAsync"],[124,56,112,47],[124,58,112,49],[125,6,113,8],[125,12,113,14],[125,16,113,18,"UnavailabilityError"],[125,52,113,37],[125,53,113,38],[125,71,113,56],[125,73,113,58],[125,97,113,82],[125,98,113,83],[126,4,114,4],[127,4,115,4],[127,11,115,11],[127,17,115,17,"ExpoApplication"],[127,41,115,32],[127,42,115,33,"getIosIdForVendorAsync"],[127,64,115,55],[127,65,115,56],[127,66,115,57],[128,2,116,0],[129,2,117,0],[130,2,118,0],[131,0,119,0],[132,0,120,0],[133,0,121,0],[134,0,122,0],[135,2,123,7],[135,17,123,22,"getIosApplicationReleaseTypeAsync"],[135,50,123,55,"getIosApplicationReleaseTypeAsync"],[135,51,123,55],[135,53,123,58],[136,4,124,4],[136,8,124,8],[136,9,124,9,"ExpoApplication"],[136,33,124,24],[136,34,124,25,"getApplicationReleaseTypeAsync"],[136,64,124,55],[136,66,124,57],[137,6,125,8],[137,12,125,14],[137,16,125,18,"UnavailabilityError"],[137,52,125,37],[137,53,125,38],[137,71,125,56],[137,73,125,58],[137,105,125,90],[137,106,125,91],[138,4,126,4],[139,4,127,4],[139,11,127,11],[139,17,127,17,"ExpoApplication"],[139,41,127,32],[139,42,127,33,"getApplicationReleaseTypeAsync"],[139,72,127,63],[139,73,127,64],[139,74,127,65],[140,2,128,0],[141,2,129,0],[142,2,130,0],[143,0,131,0],[144,0,132,0],[145,0,133,0],[146,0,134,0],[147,0,135,0],[148,0,136,0],[149,2,137,7],[149,17,137,22,"getIosPushNotificationServiceEnvironmentAsync"],[149,62,137,67,"getIosPushNotificationServiceEnvironmentAsync"],[149,63,137,67],[149,65,137,70],[150,4,138,4],[150,8,138,8],[150,9,138,9,"ExpoApplication"],[150,33,138,24],[150,34,138,25,"getPushNotificationServiceEnvironmentAsync"],[150,76,138,67],[150,78,138,69],[151,6,139,8],[151,12,139,14],[151,16,139,18,"UnavailabilityError"],[151,52,139,37],[151,53,139,38],[151,71,139,56],[151,73,139,58],[151,117,139,102],[151,118,139,103],[152,4,140,4],[153,4,141,4],[153,11,141,11],[153,17,141,17,"ExpoApplication"],[153,41,141,32],[153,42,141,33,"getPushNotificationServiceEnvironmentAsync"],[153,84,141,75],[153,85,141,76],[153,86,141,77],[154,2,142,0],[155,2,143,0],[156,2,144,0],[157,0,145,0],[158,0,146,0],[159,0,147,0],[160,0,148,0],[161,0,149,0],[162,0,150,0],[163,0,151,0],[164,0,152,0],[165,0,153,0],[166,0,154,0],[167,0,155,0],[168,0,156,0],[169,0,157,0],[170,0,158,0],[171,0,159,0],[172,0,160,0],[173,2,161,7],[173,17,161,22,"getInstallationTimeAsync"],[173,41,161,46,"getInstallationTimeAsync"],[173,42,161,46],[173,44,161,49],[174,4,162,4],[174,8,162,8],[174,9,162,9,"ExpoApplication"],[174,33,162,24],[174,34,162,25,"getInstallationTimeAsync"],[174,58,162,49],[174,60,162,51],[175,6,163,8],[175,12,163,14],[175,16,163,18,"UnavailabilityError"],[175,52,163,37],[175,53,163,38],[175,71,163,56],[175,73,163,58],[175,99,163,84],[175,100,163,85],[176,4,164,4],[177,4,165,4],[177,10,165,10,"installationTime"],[177,26,165,26],[177,29,165,29],[177,35,165,35,"ExpoApplication"],[177,59,165,50],[177,60,165,51,"getInstallationTimeAsync"],[177,84,165,75],[177,85,165,76],[177,86,165,77],[178,4,166,4],[178,11,166,11],[178,15,166,15,"Date"],[178,19,166,19],[178,20,166,20,"installationTime"],[178,36,166,36],[178,37,166,37],[179,2,167,0],[180,2,168,0],[181,2,169,0],[182,0,170,0],[183,0,171,0],[184,0,172,0],[185,0,173,0],[186,0,174,0],[187,0,175,0],[188,0,176,0],[189,0,177,0],[190,0,178,0],[191,0,179,0],[192,0,180,0],[193,2,181,7],[193,17,181,22,"getLastUpdateTimeAsync"],[193,39,181,44,"getLastUpdateTimeAsync"],[193,40,181,44],[193,42,181,47],[194,4,182,4],[194,8,182,8],[194,9,182,9,"ExpoApplication"],[194,33,182,24],[194,34,182,25,"getLastUpdateTimeAsync"],[194,56,182,47],[194,58,182,49],[195,6,183,8],[195,12,183,14],[195,16,183,18,"UnavailabilityError"],[195,52,183,37],[195,53,183,38],[195,71,183,56],[195,73,183,58],[195,97,183,82],[195,98,183,83],[196,4,184,4],[197,4,185,4],[197,10,185,10,"lastUpdateTime"],[197,24,185,24],[197,27,185,27],[197,33,185,33,"ExpoApplication"],[197,57,185,48],[197,58,185,49,"getLastUpdateTimeAsync"],[197,80,185,71],[197,81,185,72],[197,82,185,73],[198,4,186,4],[198,11,186,11],[198,15,186,15,"Date"],[198,19,186,19],[198,20,186,20,"lastUpdateTime"],[198,34,186,34],[198,35,186,35],[199,2,187,0],[200,0,187,1],[200,3]],"functionMap":{"names":["<global>","getAndroidId","getInstallReferrerAsync","getIosIdForVendorAsync","getIosApplicationReleaseTypeAsync","getIosPushNotificationServiceEnvironmentAsync","getInstallationTimeAsync","getLastUpdateTimeAsync"],"mappings":"AAA;OCgE;CDK;OEc;CFK;OGsB;CHK;OIO;CJK;OKS;CLK;OMmB;CNM;OOc;CPM"}},"type":"js/module"}]}