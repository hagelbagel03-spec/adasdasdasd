{"dependencies":[{"name":"expo-asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"ZXJFWHziJpBZf3W7vl00wXf6fd8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":45,"index":81}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./AV.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":82},"end":{"line":3,"column":53,"index":135}}],"key":"hjl8R0CKmLATYOl9LR8jZWvlf8g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: true,\n    _DEFAULT_INITIAL_PLAYBACK_STATUS: true,\n    getNativeSourceFromSource: true,\n    assertStatusValuesInBounds: true,\n    getNativeSourceAndFullInitialStatusForLoadAsync: true,\n    getUnloadedStatus: true,\n    PlaybackMixin: true\n  };\n  exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = exports.PlaybackMixin = void 0;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  var _expoAsset = require(_dependencyMap[0], \"expo-asset\");\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _AV = require(_dependencyMap[2], \"./AV.types\");\n  Object.keys(_AV).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _AV[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _AV[key];\n      }\n    });\n  });\n  // TODO add:\n  //  disableFocusOnAndroid\n  //  audio routes (at least did become noisy on android)\n  //  pan\n  //  pitch\n  //  API to explicitly request audio focus / session\n  //  API to select stream type on Android\n  //  subtitles API\n  /**\n   * @hidden\n   */\n  const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  // @needsAudit\n  /**\n   * The default initial `AVPlaybackStatusToSet` of all `Audio.Sound` objects and `Video` components is as follows:\n   *\n   * ```javascript\n   * {\n   *   progressUpdateIntervalMillis: 500,\n   *   positionMillis: 0,\n   *   shouldPlay: false,\n   *   rate: 1.0,\n   *   shouldCorrectPitch: false,\n   *   volume: 1.0,\n   *   isMuted: false,\n   *   isLooping: false,\n   * }\n   * ```\n   *\n   * This default initial status can be overwritten by setting the optional `initialStatus` in `loadAsync()` or `Audio.Sound.createAsync()`.\n   */\n  const _DEFAULT_INITIAL_PLAYBACK_STATUS = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    audioPan: 0,\n    isMuted: false,\n    isLooping: false\n  };\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getNativeSourceFromSource(source) {\n    let uri = null;\n    let overridingExtension = null;\n    let headers;\n    if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n      return {\n        uri: source,\n        overridingExtension,\n        headers\n      };\n    }\n    const asset = _getAssetFromPlaybackSource(source);\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n    if (uri == null) {\n      return null;\n    }\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n    return {\n      uri,\n      overridingExtension,\n      headers\n    };\n  }\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n    let asset = null;\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n    return asset;\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n    if (typeof status.audioPan === 'number' && (status.audioPan < -1 || status.audioPan > 1)) {\n      throw new RangeError('Pan value must be between -1.0 and 1.0');\n    }\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  async function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n    // Get the full initial status\n    const fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : Object.assign({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, initialStatus);\n    assertStatusValuesInBounds(fullInitialStatus);\n    if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n      return {\n        nativeSource: {\n          uri: source,\n          overridingExtension: null\n        },\n        fullInitialStatus\n      };\n    }\n    // Download first if necessary.\n    const asset = _getAssetFromPlaybackSource(source);\n    if (downloadFirst && asset) {\n      // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n      await asset.downloadAsync();\n    }\n    // Get the native source\n    const nativeSource = getNativeSourceFromSource(source);\n    if (nativeSource === null) {\n      throw new Error(`Cannot load an AV asset from a null playback source`);\n    }\n    // If asset has been downloaded use the localUri\n    if (asset && asset.localUri) {\n      nativeSource.uri = asset.localUri;\n    }\n    return {\n      nativeSource,\n      fullInitialStatus\n    };\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getUnloadedStatus(error = null) {\n    return Object.assign({\n      isLoaded: false\n    }, error ? {\n      error\n    } : null);\n  }\n  /**\n   * @hidden\n   * A mixin that defines common playback methods for A/V classes, so they implement the `Playback`\n   * interface.\n   */\n  const PlaybackMixin = exports.PlaybackMixin = {\n    async playAsync() {\n      return this.setStatusAsync({\n        shouldPlay: true\n      });\n    },\n    async playFromPositionAsync(positionMillis, tolerances = {}) {\n      return this.setStatusAsync({\n        positionMillis,\n        shouldPlay: true,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    },\n    async pauseAsync() {\n      return this.setStatusAsync({\n        shouldPlay: false\n      });\n    },\n    async stopAsync() {\n      return this.setStatusAsync({\n        positionMillis: 0,\n        shouldPlay: false\n      });\n    },\n    async setPositionAsync(positionMillis, tolerances = {}) {\n      return this.setStatusAsync({\n        positionMillis,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    },\n    async setRateAsync(rate, shouldCorrectPitch = false, pitchCorrectionQuality = _AV.PitchCorrectionQuality.Medium) {\n      return this.setStatusAsync({\n        rate,\n        shouldCorrectPitch,\n        pitchCorrectionQuality\n      });\n    },\n    async setVolumeAsync(volume, audioPan) {\n      return this.setStatusAsync({\n        volume,\n        audioPan\n      });\n    },\n    async setIsMutedAsync(isMuted) {\n      return this.setStatusAsync({\n        isMuted\n      });\n    },\n    async setIsLoopingAsync(isLooping) {\n      return this.setStatusAsync({\n        isLooping\n      });\n    },\n    async setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      return this.setStatusAsync({\n        progressUpdateIntervalMillis\n      });\n    }\n  };\n});","lineCount":252,"map":[[19,2,1,0],[19,6,1,0,"_expoAsset"],[19,16,1,0],[19,19,1,0,"require"],[19,26,1,0],[19,27,1,0,"_dependencyMap"],[19,41,1,0],[20,2,2,0],[20,6,2,0,"_expoModulesCore"],[20,22,2,0],[20,25,2,0,"require"],[20,32,2,0],[20,33,2,0,"_dependencyMap"],[20,47,2,0],[21,2,3,0],[21,6,3,0,"_AV"],[21,9,3,0],[21,12,3,0,"require"],[21,19,3,0],[21,20,3,0,"_dependencyMap"],[21,34,3,0],[22,2,215,0,"Object"],[22,8,215,0],[22,9,215,0,"keys"],[22,13,215,0],[22,14,215,0,"_AV"],[22,17,215,0],[22,19,215,0,"forEach"],[22,26,215,0],[22,37,215,0,"key"],[22,40,215,0],[23,4,215,0],[23,8,215,0,"key"],[23,11,215,0],[23,29,215,0,"key"],[23,32,215,0],[24,4,215,0],[24,8,215,0,"Object"],[24,14,215,0],[24,15,215,0,"prototype"],[24,24,215,0],[24,25,215,0,"hasOwnProperty"],[24,39,215,0],[24,40,215,0,"call"],[24,44,215,0],[24,45,215,0,"_exportNames"],[24,57,215,0],[24,59,215,0,"key"],[24,62,215,0],[25,4,215,0],[25,8,215,0,"key"],[25,11,215,0],[25,15,215,0,"exports"],[25,22,215,0],[25,26,215,0,"exports"],[25,33,215,0],[25,34,215,0,"key"],[25,37,215,0],[25,43,215,0,"_AV"],[25,46,215,0],[25,47,215,0,"key"],[25,50,215,0],[26,4,215,0,"Object"],[26,10,215,0],[26,11,215,0,"defineProperty"],[26,25,215,0],[26,26,215,0,"exports"],[26,33,215,0],[26,35,215,0,"key"],[26,38,215,0],[27,6,215,0,"enumerable"],[27,16,215,0],[28,6,215,0,"get"],[28,9,215,0],[28,20,215,0,"get"],[28,21,215,0],[29,8,215,0],[29,15,215,0,"_AV"],[29,18,215,0],[29,19,215,0,"key"],[29,22,215,0],[30,6,215,0],[31,4,215,0],[32,2,215,0],[33,2,4,0],[34,2,5,0],[35,2,6,0],[36,2,7,0],[37,2,8,0],[38,2,9,0],[39,2,10,0],[40,2,11,0],[41,2,12,0],[42,0,13,0],[43,0,14,0],[44,2,15,7],[44,8,15,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[44,48,15,53],[44,51,15,53,"exports"],[44,58,15,53],[44,59,15,53,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[44,99,15,53],[44,102,15,56],[44,105,15,59],[45,2,16,0],[46,2,17,0],[47,0,18,0],[48,0,19,0],[49,0,20,0],[50,0,21,0],[51,0,22,0],[52,0,23,0],[53,0,24,0],[54,0,25,0],[55,0,26,0],[56,0,27,0],[57,0,28,0],[58,0,29,0],[59,0,30,0],[60,0,31,0],[61,0,32,0],[62,0,33,0],[63,0,34,0],[64,2,35,7],[64,8,35,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[64,40,35,45],[64,43,35,45,"exports"],[64,50,35,45],[64,51,35,45,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[64,83,35,45],[64,86,35,48],[65,4,36,4,"positionMillis"],[65,18,36,18],[65,20,36,20],[65,21,36,21],[66,4,37,4,"progressUpdateIntervalMillis"],[66,32,37,32],[66,34,37,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[66,74,37,74],[67,4,38,4,"shouldPlay"],[67,14,38,14],[67,16,38,16],[67,21,38,21],[68,4,39,4,"rate"],[68,8,39,8],[68,10,39,10],[68,13,39,13],[69,4,40,4,"shouldCorrectPitch"],[69,22,40,22],[69,24,40,24],[69,29,40,29],[70,4,41,4,"volume"],[70,10,41,10],[70,12,41,12],[70,15,41,15],[71,4,42,4,"audioPan"],[71,12,42,12],[71,14,42,14],[71,15,42,15],[72,4,43,4,"isMuted"],[72,11,43,11],[72,13,43,13],[72,18,43,18],[73,4,44,4,"isLooping"],[73,13,44,13],[73,15,44,15],[74,2,45,0],[74,3,45,1],[75,2,46,0],[76,2,47,0],[77,0,48,0],[78,0,49,0],[79,2,50,7],[79,11,50,16,"getNativeSourceFromSource"],[79,36,50,41,"getNativeSourceFromSource"],[79,37,50,42,"source"],[79,43,50,48],[79,45,50,50],[80,4,51,4],[80,8,51,8,"uri"],[80,11,51,11],[80,14,51,14],[80,18,51,18],[81,4,52,4],[81,8,52,8,"overridingExtension"],[81,27,52,27],[81,30,52,30],[81,34,52,34],[82,4,53,4],[82,8,53,8,"headers"],[82,15,53,15],[83,4,54,4],[83,8,54,8],[83,15,54,15,"source"],[83,21,54,21],[83,26,54,26],[83,34,54,34],[83,38,54,38,"Platform"],[83,63,54,46],[83,64,54,47,"OS"],[83,66,54,49],[83,71,54,54],[83,76,54,59],[83,78,54,61],[84,6,55,8],[84,13,55,15],[85,8,56,12,"uri"],[85,11,56,15],[85,13,56,17,"source"],[85,19,56,23],[86,8,57,12,"overridingExtension"],[86,27,57,31],[87,8,58,12,"headers"],[88,6,59,8],[88,7,59,9],[89,4,60,4],[90,4,61,4],[90,10,61,10,"asset"],[90,15,61,15],[90,18,61,18,"_getAssetFromPlaybackSource"],[90,45,61,45],[90,46,61,46,"source"],[90,52,61,52],[90,53,61,53],[91,4,62,4],[91,8,62,8,"asset"],[91,13,62,13],[91,17,62,17],[91,21,62,21],[91,23,62,23],[92,6,63,8,"uri"],[92,9,63,11],[92,12,63,14,"asset"],[92,17,63,19],[92,18,63,20,"localUri"],[92,26,63,28],[92,30,63,32,"asset"],[92,35,63,37],[92,36,63,38,"uri"],[92,39,63,41],[93,4,64,4],[93,5,64,5],[93,11,65,9],[93,15,65,13,"source"],[93,21,65,19],[93,25,65,23],[93,29,65,27],[93,33,66,8],[93,40,66,15,"source"],[93,46,66,21],[93,51,66,26],[93,59,66,34],[93,63,67,8],[93,68,67,13],[93,72,67,17,"source"],[93,78,67,23],[93,82,68,8],[93,89,68,15,"source"],[93,95,68,21],[93,96,68,22,"uri"],[93,99,68,25],[93,104,68,30],[93,112,68,38],[93,114,68,40],[94,6,69,8,"uri"],[94,9,69,11],[94,12,69,14,"source"],[94,18,69,20],[94,19,69,21,"uri"],[94,22,69,24],[95,4,70,4],[96,4,71,4],[96,8,71,8,"uri"],[96,11,71,11],[96,15,71,15],[96,19,71,19],[96,21,71,21],[97,6,72,8],[97,13,72,15],[97,17,72,19],[98,4,73,4],[99,4,74,4],[99,8,74,8,"source"],[99,14,74,14],[99,18,74,18],[99,22,74,22],[99,26,75,8],[99,33,75,15,"source"],[99,39,75,21],[99,44,75,26],[99,52,75,34],[99,56,76,8],[99,86,76,38],[99,90,76,42,"source"],[99,96,76,48],[99,100,77,8],[99,107,77,15,"source"],[99,113,77,21],[99,114,77,22,"overrideFileExtensionAndroid"],[99,142,77,50],[99,147,77,55],[99,155,77,63],[99,157,77,65],[100,6,78,8,"overridingExtension"],[100,25,78,27],[100,28,78,30,"source"],[100,34,78,36],[100,35,78,37,"overrideFileExtensionAndroid"],[100,63,78,65],[101,4,79,4],[102,4,80,4],[102,8,80,8,"source"],[102,14,80,14],[102,18,80,18],[102,22,80,22],[102,26,81,8],[102,33,81,15,"source"],[102,39,81,21],[102,44,81,26],[102,52,81,34],[102,56,82,8],[102,65,82,17],[102,69,82,21,"source"],[102,75,82,27],[102,79,83,8],[102,86,83,15,"source"],[102,92,83,21],[102,93,83,22,"headers"],[102,100,83,29],[102,105,83,34],[102,113,83,42],[102,115,83,44],[103,6,84,8,"headers"],[103,13,84,15],[103,16,84,18,"source"],[103,22,84,24],[103,23,84,25,"headers"],[103,30,84,32],[104,4,85,4],[105,4,86,4],[105,11,86,11],[106,6,86,13,"uri"],[106,9,86,16],[107,6,86,18,"overridingExtension"],[107,25,86,37],[108,6,86,39,"headers"],[109,4,86,47],[109,5,86,48],[110,2,87,0],[111,2,88,0],[111,11,88,9,"_getAssetFromPlaybackSource"],[111,38,88,36,"_getAssetFromPlaybackSource"],[111,39,88,37,"source"],[111,45,88,43],[111,47,88,45],[112,4,89,4],[112,8,89,8,"source"],[112,14,89,14],[112,18,89,18],[112,22,89,22],[112,24,89,24],[113,6,90,8],[113,13,90,15],[113,17,90,19],[114,4,91,4],[115,4,92,4],[115,8,92,8,"asset"],[115,13,92,13],[115,16,92,16],[115,20,92,20],[116,4,93,4],[116,8,93,8],[116,15,93,15,"source"],[116,21,93,21],[116,26,93,26],[116,34,93,34],[116,36,93,36],[117,6,94,8,"asset"],[117,11,94,13],[117,14,94,16,"Asset"],[117,30,94,21],[117,31,94,22,"fromModule"],[117,41,94,32],[117,42,94,33,"source"],[117,48,94,39],[117,49,94,40],[118,4,95,4],[118,5,95,5],[118,11,96,9],[118,15,96,13,"source"],[118,21,96,19],[118,33,96,31,"Asset"],[118,49,96,36],[118,51,96,38],[119,6,97,8,"asset"],[119,11,97,13],[119,14,97,16,"source"],[119,20,97,22],[120,4,98,4],[121,4,99,4],[121,11,99,11,"asset"],[121,16,99,16],[122,2,100,0],[123,2,101,0],[124,2,102,0],[125,0,103,0],[126,0,104,0],[127,2,105,7],[127,11,105,16,"assertStatusValuesInBounds"],[127,37,105,42,"assertStatusValuesInBounds"],[127,38,105,43,"status"],[127,44,105,49],[127,46,105,51],[128,4,106,4],[128,8,106,8],[128,15,106,15,"status"],[128,21,106,21],[128,22,106,22,"rate"],[128,26,106,26],[128,31,106,31],[128,39,106,39],[128,44,106,44,"status"],[128,50,106,50],[128,51,106,51,"rate"],[128,55,106,55],[128,58,106,58],[128,59,106,59],[128,63,106,63,"status"],[128,69,106,69],[128,70,106,70,"rate"],[128,74,106,74],[128,77,106,77],[128,79,106,79],[128,80,106,80],[128,82,106,82],[129,6,107,8],[129,12,107,14],[129,16,107,18,"RangeError"],[129,26,107,28],[129,27,107,29],[129,68,107,70],[129,69,107,71],[130,4,108,4],[131,4,109,4],[131,8,109,8],[131,15,109,15,"status"],[131,21,109,21],[131,22,109,22,"volume"],[131,28,109,28],[131,33,109,33],[131,41,109,41],[131,46,109,46,"status"],[131,52,109,52],[131,53,109,53,"volume"],[131,59,109,59],[131,62,109,62],[131,63,109,63],[131,67,109,67,"status"],[131,73,109,73],[131,74,109,74,"volume"],[131,80,109,80],[131,83,109,83],[131,84,109,84],[131,85,109,85],[131,87,109,87],[132,6,110,8],[132,12,110,14],[132,16,110,18,"RangeError"],[132,26,110,28],[132,27,110,29],[132,69,110,71],[132,70,110,72],[133,4,111,4],[134,4,112,4],[134,8,112,8],[134,15,112,15,"status"],[134,21,112,21],[134,22,112,22,"audioPan"],[134,30,112,30],[134,35,112,35],[134,43,112,43],[134,48,112,48,"status"],[134,54,112,54],[134,55,112,55,"audioPan"],[134,63,112,63],[134,66,112,66],[134,67,112,67],[134,68,112,68],[134,72,112,72,"status"],[134,78,112,78],[134,79,112,79,"audioPan"],[134,87,112,87],[134,90,112,90],[134,91,112,91],[134,92,112,92],[134,94,112,94],[135,6,113,8],[135,12,113,14],[135,16,113,18,"RangeError"],[135,26,113,28],[135,27,113,29],[135,67,113,69],[135,68,113,70],[136,4,114,4],[137,2,115,0],[138,2,116,0],[139,2,117,0],[140,0,118,0],[141,0,119,0],[142,2,120,7],[142,17,120,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[142,64,120,69,"getNativeSourceAndFullInitialStatusForLoadAsync"],[142,65,120,70,"source"],[142,71,120,76],[142,73,120,78,"initialStatus"],[142,86,120,91],[142,88,120,93,"downloadFirst"],[142,101,120,106],[142,103,120,108],[143,4,121,4],[144,4,122,4],[144,10,122,10,"fullInitialStatus"],[144,27,122,27],[144,30,122,30,"initialStatus"],[144,43,122,43],[144,47,122,47],[144,51,122,51],[144,54,123,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[144,86,123,42],[144,89,123,42,"Object"],[144,95,123,42],[144,96,123,42,"assign"],[144,102,123,42],[144,107,125,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[144,139,125,47],[144,141,126,15,"initialStatus"],[144,154,126,28],[144,155,127,9],[145,4,128,4,"assertStatusValuesInBounds"],[145,30,128,30],[145,31,128,31,"fullInitialStatus"],[145,48,128,48],[145,49,128,49],[146,4,129,4],[146,8,129,8],[146,15,129,15,"source"],[146,21,129,21],[146,26,129,26],[146,34,129,34],[146,38,129,38,"Platform"],[146,63,129,46],[146,64,129,47,"OS"],[146,66,129,49],[146,71,129,54],[146,76,129,59],[146,78,129,61],[147,6,130,8],[147,13,130,15],[148,8,131,12,"nativeSource"],[148,20,131,24],[148,22,131,26],[149,10,132,16,"uri"],[149,13,132,19],[149,15,132,21,"source"],[149,21,132,27],[150,10,133,16,"overridingExtension"],[150,29,133,35],[150,31,133,37],[151,8,134,12],[151,9,134,13],[152,8,135,12,"fullInitialStatus"],[153,6,136,8],[153,7,136,9],[154,4,137,4],[155,4,138,4],[156,4,139,4],[156,10,139,10,"asset"],[156,15,139,15],[156,18,139,18,"_getAssetFromPlaybackSource"],[156,45,139,45],[156,46,139,46,"source"],[156,52,139,52],[156,53,139,53],[157,4,140,4],[157,8,140,8,"downloadFirst"],[157,21,140,21],[157,25,140,25,"asset"],[157,30,140,30],[157,32,140,32],[158,6,141,8],[159,6,142,8],[159,12,142,14,"asset"],[159,17,142,19],[159,18,142,20,"downloadAsync"],[159,31,142,33],[159,32,142,34],[159,33,142,35],[160,4,143,4],[161,4,144,4],[162,4,145,4],[162,10,145,10,"nativeSource"],[162,22,145,22],[162,25,145,25,"getNativeSourceFromSource"],[162,50,145,50],[162,51,145,51,"source"],[162,57,145,57],[162,58,145,58],[163,4,146,4],[163,8,146,8,"nativeSource"],[163,20,146,20],[163,25,146,25],[163,29,146,29],[163,31,146,31],[164,6,147,8],[164,12,147,14],[164,16,147,18,"Error"],[164,21,147,23],[164,22,147,24],[164,75,147,77],[164,76,147,78],[165,4,148,4],[166,4,149,4],[167,4,150,4],[167,8,150,8,"asset"],[167,13,150,13],[167,17,150,17,"asset"],[167,22,150,22],[167,23,150,23,"localUri"],[167,31,150,31],[167,33,150,33],[168,6,151,8,"nativeSource"],[168,18,151,20],[168,19,151,21,"uri"],[168,22,151,24],[168,25,151,27,"asset"],[168,30,151,32],[168,31,151,33,"localUri"],[168,39,151,41],[169,4,152,4],[170,4,153,4],[170,11,153,11],[171,6,153,13,"nativeSource"],[171,18,153,25],[172,6,153,27,"fullInitialStatus"],[173,4,153,45],[173,5,153,46],[174,2,154,0],[175,2,155,0],[176,2,156,0],[177,0,157,0],[178,0,158,0],[179,2,159,7],[179,11,159,16,"getUnloadedStatus"],[179,28,159,33,"getUnloadedStatus"],[179,29,159,34,"error"],[179,34,159,39],[179,37,159,42],[179,41,159,46],[179,43,159,48],[180,4,160,4],[180,11,160,4,"Object"],[180,17,160,4],[180,18,160,4,"assign"],[180,24,160,4],[181,6,161,8,"isLoaded"],[181,14,161,16],[181,16,161,18],[182,4,161,23],[182,7,162,12,"error"],[182,12,162,17],[182,15,162,20],[183,6,162,22,"error"],[184,4,162,28],[184,5,162,29],[184,8,162,32],[184,12,162,36],[185,2,164,0],[186,2,165,0],[187,0,166,0],[188,0,167,0],[189,0,168,0],[190,0,169,0],[191,2,170,7],[191,8,170,13,"PlaybackMixin"],[191,21,170,26],[191,24,170,26,"exports"],[191,31,170,26],[191,32,170,26,"PlaybackMixin"],[191,45,170,26],[191,48,170,29],[192,4,171,4],[192,10,171,10,"playAsync"],[192,19,171,19,"playAsync"],[192,20,171,19],[192,22,171,22],[193,6,172,8],[193,13,172,15],[193,17,172,19],[193,18,172,20,"setStatusAsync"],[193,32,172,34],[193,33,172,35],[194,8,172,37,"shouldPlay"],[194,18,172,47],[194,20,172,49],[195,6,172,54],[195,7,172,55],[195,8,172,56],[196,4,173,4],[196,5,173,5],[197,4,174,4],[197,10,174,10,"playFromPositionAsync"],[197,31,174,31,"playFromPositionAsync"],[197,32,174,32,"positionMillis"],[197,46,174,46],[197,48,174,48,"tolerances"],[197,58,174,58],[197,61,174,61],[197,62,174,62],[197,63,174,63],[197,65,174,65],[198,6,175,8],[198,13,175,15],[198,17,175,19],[198,18,175,20,"setStatusAsync"],[198,32,175,34],[198,33,175,35],[199,8,176,12,"positionMillis"],[199,22,176,26],[200,8,177,12,"shouldPlay"],[200,18,177,22],[200,20,177,24],[200,24,177,28],[201,8,178,12,"seekMillisToleranceAfter"],[201,32,178,36],[201,34,178,38,"tolerances"],[201,44,178,48],[201,45,178,49,"toleranceMillisAfter"],[201,65,178,69],[202,8,179,12,"seekMillisToleranceBefore"],[202,33,179,37],[202,35,179,39,"tolerances"],[202,45,179,49],[202,46,179,50,"toleranceMillisBefore"],[203,6,180,8],[203,7,180,9],[203,8,180,10],[204,4,181,4],[204,5,181,5],[205,4,182,4],[205,10,182,10,"pauseAsync"],[205,20,182,20,"pauseAsync"],[205,21,182,20],[205,23,182,23],[206,6,183,8],[206,13,183,15],[206,17,183,19],[206,18,183,20,"setStatusAsync"],[206,32,183,34],[206,33,183,35],[207,8,183,37,"shouldPlay"],[207,18,183,47],[207,20,183,49],[208,6,183,55],[208,7,183,56],[208,8,183,57],[209,4,184,4],[209,5,184,5],[210,4,185,4],[210,10,185,10,"stopAsync"],[210,19,185,19,"stopAsync"],[210,20,185,19],[210,22,185,22],[211,6,186,8],[211,13,186,15],[211,17,186,19],[211,18,186,20,"setStatusAsync"],[211,32,186,34],[211,33,186,35],[212,8,186,37,"positionMillis"],[212,22,186,51],[212,24,186,53],[212,25,186,54],[213,8,186,56,"shouldPlay"],[213,18,186,66],[213,20,186,68],[214,6,186,74],[214,7,186,75],[214,8,186,76],[215,4,187,4],[215,5,187,5],[216,4,188,4],[216,10,188,10,"setPositionAsync"],[216,26,188,26,"setPositionAsync"],[216,27,188,27,"positionMillis"],[216,41,188,41],[216,43,188,43,"tolerances"],[216,53,188,53],[216,56,188,56],[216,57,188,57],[216,58,188,58],[216,60,188,60],[217,6,189,8],[217,13,189,15],[217,17,189,19],[217,18,189,20,"setStatusAsync"],[217,32,189,34],[217,33,189,35],[218,8,190,12,"positionMillis"],[218,22,190,26],[219,8,191,12,"seekMillisToleranceAfter"],[219,32,191,36],[219,34,191,38,"tolerances"],[219,44,191,48],[219,45,191,49,"toleranceMillisAfter"],[219,65,191,69],[220,8,192,12,"seekMillisToleranceBefore"],[220,33,192,37],[220,35,192,39,"tolerances"],[220,45,192,49],[220,46,192,50,"toleranceMillisBefore"],[221,6,193,8],[221,7,193,9],[221,8,193,10],[222,4,194,4],[222,5,194,5],[223,4,195,4],[223,10,195,10,"setRateAsync"],[223,22,195,22,"setRateAsync"],[223,23,195,23,"rate"],[223,27,195,27],[223,29,195,29,"shouldCorrectPitch"],[223,47,195,47],[223,50,195,50],[223,55,195,55],[223,57,195,57,"pitchCorrectionQuality"],[223,79,195,79],[223,82,195,82,"PitchCorrectionQuality"],[223,108,195,104],[223,109,195,105,"Medium"],[223,115,195,111],[223,117,195,113],[224,6,196,8],[224,13,196,15],[224,17,196,19],[224,18,196,20,"setStatusAsync"],[224,32,196,34],[224,33,196,35],[225,8,197,12,"rate"],[225,12,197,16],[226,8,198,12,"shouldCorrectPitch"],[226,26,198,30],[227,8,199,12,"pitchCorrectionQuality"],[228,6,200,8],[228,7,200,9],[228,8,200,10],[229,4,201,4],[229,5,201,5],[230,4,202,4],[230,10,202,10,"setVolumeAsync"],[230,24,202,24,"setVolumeAsync"],[230,25,202,25,"volume"],[230,31,202,31],[230,33,202,33,"audioPan"],[230,41,202,41],[230,43,202,43],[231,6,203,8],[231,13,203,15],[231,17,203,19],[231,18,203,20,"setStatusAsync"],[231,32,203,34],[231,33,203,35],[232,8,203,37,"volume"],[232,14,203,43],[233,8,203,45,"audioPan"],[234,6,203,54],[234,7,203,55],[234,8,203,56],[235,4,204,4],[235,5,204,5],[236,4,205,4],[236,10,205,10,"setIsMutedAsync"],[236,25,205,25,"setIsMutedAsync"],[236,26,205,26,"isMuted"],[236,33,205,33],[236,35,205,35],[237,6,206,8],[237,13,206,15],[237,17,206,19],[237,18,206,20,"setStatusAsync"],[237,32,206,34],[237,33,206,35],[238,8,206,37,"isMuted"],[239,6,206,45],[239,7,206,46],[239,8,206,47],[240,4,207,4],[240,5,207,5],[241,4,208,4],[241,10,208,10,"setIsLoopingAsync"],[241,27,208,27,"setIsLoopingAsync"],[241,28,208,28,"isLooping"],[241,37,208,37],[241,39,208,39],[242,6,209,8],[242,13,209,15],[242,17,209,19],[242,18,209,20,"setStatusAsync"],[242,32,209,34],[242,33,209,35],[243,8,209,37,"isLooping"],[244,6,209,47],[244,7,209,48],[244,8,209,49],[245,4,210,4],[245,5,210,5],[246,4,211,4],[246,10,211,10,"setProgressUpdateIntervalAsync"],[246,40,211,40,"setProgressUpdateIntervalAsync"],[246,41,211,41,"progressUpdateIntervalMillis"],[246,69,211,69],[246,71,211,71],[247,6,212,8],[247,13,212,15],[247,17,212,19],[247,18,212,20,"setStatusAsync"],[247,32,212,34],[247,33,212,35],[248,8,212,37,"progressUpdateIntervalMillis"],[249,6,212,66],[249,7,212,67],[249,8,212,68],[250,4,213,4],[251,2,214,0],[251,3,214,1],[252,0,214,2],[252,3]],"functionMap":{"names":["<global>","getNativeSourceFromSource","_getAssetFromPlaybackSource","assertStatusValuesInBounds","getNativeSourceAndFullInitialStatusForLoadAsync","getUnloadedStatus","PlaybackMixin.playAsync","PlaybackMixin.playFromPositionAsync","PlaybackMixin.pauseAsync","PlaybackMixin.stopAsync","PlaybackMixin.setPositionAsync","PlaybackMixin.setRateAsync","PlaybackMixin.setVolumeAsync","PlaybackMixin.setIsMutedAsync","PlaybackMixin.setIsLoopingAsync","PlaybackMixin.setProgressUpdateIntervalAsync"],"mappings":"AAA;OCiD;CDqC;AEC;CFY;OGK;CHU;OIK;CJkC;OKK;CLK;IMO;KNE;IOC;KPO;IQC;KRE;ISC;KTE;IUC;KVM;IWC;KXM;IYC;KZE;IaC;KbE;IcC;KdE;IeC;KfE"}},"type":"js/module"}]}