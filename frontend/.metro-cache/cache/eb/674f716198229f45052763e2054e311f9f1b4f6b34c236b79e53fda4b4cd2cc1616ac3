{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"abort-controller/polyfill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"Zt445sKJeaqmd3t2yOR0GF+G/L0=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":56,"index":92}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":66,"index":159}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./TokenEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":54,"index":214}}],"key":"5j/AymtYsxXL7qVrWh9rwW/7ePw=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":64,"index":279}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}},{"name":"./utils/updateDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":280},"end":{"line":6,"column":120,"index":400}}],"key":"153jXZ66s6HybIv8YrABEWMrDwY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.__handlePersistedRegistrationInfoAsync = __handlePersistedRegistrationInfoAsync;\n  exports.setAutoServerRegistrationEnabledAsync = setAutoServerRegistrationEnabledAsync;\n  require(_dependencyMap[1], \"abort-controller/polyfill\");\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[3], \"./ServerRegistrationModule\"));\n  var _TokenEmitter = require(_dependencyMap[4], \"./TokenEmitter\");\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[5], \"./getDevicePushTokenAsync\"));\n  var _updateDevicePushTokenAsync = require(_dependencyMap[6], \"./utils/updateDevicePushTokenAsync\");\n  let lastAbortController = null;\n  async function updatePushTokenAsync(token) {\n    // Abort current update process\n    lastAbortController?.abort();\n    lastAbortController = new AbortController();\n    return await (0, _updateDevicePushTokenAsync.updateDevicePushTokenAsync)(lastAbortController.signal, token);\n  }\n  /**\n   * @hidden - the comment is misleading and the purpose of the function needs to be reevaluated\n   *\n   * Sets the registration information so that the device push token gets pushed\n   * to the given registration endpoint\n   * @param enabled\n   */\n  async function setAutoServerRegistrationEnabledAsync(enabled) {\n    // We are overwriting registration, so we shouldn't let\n    // any pending request complete.\n    lastAbortController?.abort();\n    if (!_ServerRegistrationModule.default.setRegistrationInfoAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'setRegistrationInfoAsync');\n    }\n    await _ServerRegistrationModule.default.setRegistrationInfoAsync(enabled ? JSON.stringify({\n      isEnabled: enabled\n    }) : null);\n  }\n  // note(Chmiela): This function is exported only for testing purposes.\n  async function __handlePersistedRegistrationInfoAsync(registrationInfo) {\n    if (!registrationInfo) {\n      // No registration info, nothing to do\n      return;\n    }\n    let registration = null;\n    try {\n      registration = JSON.parse(registrationInfo);\n    } catch (e) {\n      console.warn('[expo-notifications] Error encountered while fetching registration information for auto token updates.', e);\n    }\n    if (!registration?.isEnabled) {\n      // Registration is invalid or not enabled, nothing more to do\n      return;\n    }\n    try {\n      // Since the registration is enabled, fetching a \"new\" device token\n      // shouldn't be a problem.\n      const latestDevicePushToken = await (0, _getDevicePushTokenAsync.default)();\n      await updatePushTokenAsync(latestDevicePushToken);\n    } catch (e) {\n      console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n    }\n  }\n  if (_ServerRegistrationModule.default.getRegistrationInfoAsync) {\n    // A global scope (to get all the updates) device push token\n    // subscription, never cleared.\n    (0, _TokenEmitter.addPushTokenListener)(async token => {\n      try {\n        // Before updating the push token on server we always check if we should\n        // Since modules can't change their method availability while running, we\n        // can assert it's defined.\n        const registrationInfo = await _ServerRegistrationModule.default.getRegistrationInfoAsync();\n        if (!registrationInfo) {\n          // Registration is not enabled\n          return;\n        }\n        const registration = JSON.parse(registrationInfo);\n        if (registration?.isEnabled) {\n          // Dispatch an abortable task to update\n          // registration with new token.\n          await updatePushTokenAsync(token);\n        }\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n      }\n    });\n    // Verify if persisted registration\n    // has successfully uploaded last known\n    // device push token. If not, retry.\n    _ServerRegistrationModule.default.getRegistrationInfoAsync().then(__handlePersistedRegistrationInfoAsync);\n  } else {\n    console.warn(`[expo-notifications] Error encountered while fetching auto-registration state, new tokens will not be automatically registered on server.`, new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'getRegistrationInfoAsync'));\n  }\n});","lineCount":94,"map":[[8,2,1,0,"require"],[8,9,1,0],[8,10,1,0,"_dependencyMap"],[8,24,1,0],[9,2,2,0],[9,6,2,0,"_expoModulesCore"],[9,22,2,0],[9,25,2,0,"require"],[9,32,2,0],[9,33,2,0,"_dependencyMap"],[9,47,2,0],[10,2,3,0],[10,6,3,0,"_ServerRegistrationModule"],[10,31,3,0],[10,34,3,0,"_interopRequireDefault"],[10,56,3,0],[10,57,3,0,"require"],[10,64,3,0],[10,65,3,0,"_dependencyMap"],[10,79,3,0],[11,2,4,0],[11,6,4,0,"_TokenEmitter"],[11,19,4,0],[11,22,4,0,"require"],[11,29,4,0],[11,30,4,0,"_dependencyMap"],[11,44,4,0],[12,2,5,0],[12,6,5,0,"_getDevicePushTokenAsync"],[12,30,5,0],[12,33,5,0,"_interopRequireDefault"],[12,55,5,0],[12,56,5,0,"require"],[12,63,5,0],[12,64,5,0,"_dependencyMap"],[12,78,5,0],[13,2,6,0],[13,6,6,0,"_updateDevicePushTokenAsync"],[13,33,6,0],[13,36,6,0,"require"],[13,43,6,0],[13,44,6,0,"_dependencyMap"],[13,58,6,0],[14,2,7,0],[14,6,7,4,"lastAbortController"],[14,25,7,23],[14,28,7,26],[14,32,7,30],[15,2,8,0],[15,17,8,15,"updatePushTokenAsync"],[15,37,8,35,"updatePushTokenAsync"],[15,38,8,36,"token"],[15,43,8,41],[15,45,8,43],[16,4,9,4],[17,4,10,4,"lastAbortController"],[17,23,10,23],[17,25,10,25,"abort"],[17,30,10,30],[17,31,10,31],[17,32,10,32],[18,4,11,4,"lastAbortController"],[18,23,11,23],[18,26,11,26],[18,30,11,30,"AbortController"],[18,45,11,45],[18,46,11,46],[18,47,11,47],[19,4,12,4],[19,11,12,11],[19,17,12,17],[19,21,12,17,"updateDevicePushTokenAsyncWithSignal"],[19,75,12,53],[19,77,12,54,"lastAbortController"],[19,96,12,73],[19,97,12,74,"signal"],[19,103,12,80],[19,105,12,82,"token"],[19,110,12,87],[19,111,12,88],[20,2,13,0],[21,2,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,2,21,7],[28,17,21,22,"setAutoServerRegistrationEnabledAsync"],[28,54,21,59,"setAutoServerRegistrationEnabledAsync"],[28,55,21,60,"enabled"],[28,62,21,67],[28,64,21,69],[29,4,22,4],[30,4,23,4],[31,4,24,4,"lastAbortController"],[31,23,24,23],[31,25,24,25,"abort"],[31,30,24,30],[31,31,24,31],[31,32,24,32],[32,4,25,4],[32,8,25,8],[32,9,25,9,"ServerRegistrationModule"],[32,42,25,33],[32,43,25,34,"setRegistrationInfoAsync"],[32,67,25,58],[32,69,25,60],[33,6,26,8],[33,12,26,14],[33,16,26,18,"UnavailabilityError"],[33,52,26,37],[33,53,26,38],[33,79,26,64],[33,81,26,66],[33,107,26,92],[33,108,26,93],[34,4,27,4],[35,4,28,4],[35,10,28,10,"ServerRegistrationModule"],[35,43,28,34],[35,44,28,35,"setRegistrationInfoAsync"],[35,68,28,59],[35,69,28,60,"enabled"],[35,76,28,67],[35,79,28,70,"JSON"],[35,83,28,74],[35,84,28,75,"stringify"],[35,93,28,84],[35,94,28,85],[36,6,28,87,"isEnabled"],[36,15,28,96],[36,17,28,98,"enabled"],[37,4,28,106],[37,5,28,107],[37,6,28,108],[37,9,28,111],[37,13,28,115],[37,14,28,116],[38,2,29,0],[39,2,30,0],[40,2,31,7],[40,17,31,22,"__handlePersistedRegistrationInfoAsync"],[40,55,31,60,"__handlePersistedRegistrationInfoAsync"],[40,56,31,61,"registrationInfo"],[40,72,31,77],[40,74,31,79],[41,4,32,4],[41,8,32,8],[41,9,32,9,"registrationInfo"],[41,25,32,25],[41,27,32,27],[42,6,33,8],[43,6,34,8],[44,4,35,4],[45,4,36,4],[45,8,36,8,"registration"],[45,20,36,20],[45,23,36,23],[45,27,36,27],[46,4,37,4],[46,8,37,8],[47,6,38,8,"registration"],[47,18,38,20],[47,21,38,23,"JSON"],[47,25,38,27],[47,26,38,28,"parse"],[47,31,38,33],[47,32,38,34,"registrationInfo"],[47,48,38,50],[47,49,38,51],[48,4,39,4],[48,5,39,5],[48,6,40,4],[48,13,40,11,"e"],[48,14,40,12],[48,16,40,14],[49,6,41,8,"console"],[49,13,41,15],[49,14,41,16,"warn"],[49,18,41,20],[49,19,41,21],[49,123,41,125],[49,125,41,127,"e"],[49,126,41,128],[49,127,41,129],[50,4,42,4],[51,4,43,4],[51,8,43,8],[51,9,43,9,"registration"],[51,21,43,21],[51,23,43,23,"isEnabled"],[51,32,43,32],[51,34,43,34],[52,6,44,8],[53,6,45,8],[54,4,46,4],[55,4,47,4],[55,8,47,8],[56,6,48,8],[57,6,49,8],[58,6,50,8],[58,12,50,14,"latestDevicePushToken"],[58,33,50,35],[58,36,50,38],[58,42,50,44],[58,46,50,44,"getDevicePushTokenAsync"],[58,78,50,67],[58,80,50,68],[58,81,50,69],[59,6,51,8],[59,12,51,14,"updatePushTokenAsync"],[59,32,51,34],[59,33,51,35,"latestDevicePushToken"],[59,54,51,56],[59,55,51,57],[60,4,52,4],[60,5,52,5],[60,6,53,4],[60,13,53,11,"e"],[60,14,53,12],[60,16,53,14],[61,6,54,8,"console"],[61,13,54,15],[61,14,54,16,"warn"],[61,18,54,20],[61,19,54,21],[61,125,54,127],[61,127,54,129,"e"],[61,128,54,130],[61,129,54,131],[62,4,55,4],[63,2,56,0],[64,2,57,0],[64,6,57,4,"ServerRegistrationModule"],[64,39,57,28],[64,40,57,29,"getRegistrationInfoAsync"],[64,64,57,53],[64,66,57,55],[65,4,58,4],[66,4,59,4],[67,4,60,4],[67,8,60,4,"addPushTokenListener"],[67,42,60,24],[67,44,60,25],[67,50,60,32,"token"],[67,55,60,37],[67,59,60,42],[68,6,61,8],[68,10,61,12],[69,8,62,12],[70,8,63,12],[71,8,64,12],[72,8,65,12],[72,14,65,18,"registrationInfo"],[72,30,65,34],[72,33,65,37],[72,39,65,43,"ServerRegistrationModule"],[72,72,65,67],[72,73,65,68,"getRegistrationInfoAsync"],[72,97,65,92],[72,98,65,93],[72,99,65,94],[73,8,66,12],[73,12,66,16],[73,13,66,17,"registrationInfo"],[73,29,66,33],[73,31,66,35],[74,10,67,16],[75,10,68,16],[76,8,69,12],[77,8,70,12],[77,14,70,18,"registration"],[77,26,70,30],[77,29,70,33,"JSON"],[77,33,70,37],[77,34,70,38,"parse"],[77,39,70,43],[77,40,70,44,"registrationInfo"],[77,56,70,60],[77,57,70,61],[78,8,71,12],[78,12,71,16,"registration"],[78,24,71,28],[78,26,71,30,"isEnabled"],[78,35,71,39],[78,37,71,41],[79,10,72,16],[80,10,73,16],[81,10,74,16],[81,16,74,22,"updatePushTokenAsync"],[81,36,74,42],[81,37,74,43,"token"],[81,42,74,48],[81,43,74,49],[82,8,75,12],[83,6,76,8],[83,7,76,9],[83,8,77,8],[83,15,77,15,"e"],[83,16,77,16],[83,18,77,18],[84,8,78,12,"console"],[84,15,78,19],[84,16,78,20,"warn"],[84,20,78,24],[84,21,78,25],[84,127,78,131],[84,129,78,133,"e"],[84,130,78,134],[84,131,78,135],[85,6,79,8],[86,4,80,4],[86,5,80,5],[86,6,80,6],[87,4,81,4],[88,4,82,4],[89,4,83,4],[90,4,84,4,"ServerRegistrationModule"],[90,37,84,28],[90,38,84,29,"getRegistrationInfoAsync"],[90,62,84,53],[90,63,84,54],[90,64,84,55],[90,65,84,56,"then"],[90,69,84,60],[90,70,84,61,"__handlePersistedRegistrationInfoAsync"],[90,108,84,99],[90,109,84,100],[91,2,85,0],[91,3,85,1],[91,9,86,5],[92,4,87,4,"console"],[92,11,87,11],[92,12,87,12,"warn"],[92,16,87,16],[92,17,87,17],[92,156,87,156],[92,158,87,158],[92,162,87,162,"UnavailabilityError"],[92,198,87,181],[92,199,87,182],[92,225,87,208],[92,227,87,210],[92,253,87,236],[92,254,87,237],[92,255,87,238],[93,2,88,0],[94,0,88,1],[94,3]],"functionMap":{"names":["<global>","updatePushTokenAsync","setAutoServerRegistrationEnabledAsync","__handlePersistedRegistrationInfoAsync","addPushTokenListener$argument_0"],"mappings":"AAA;ACO;CDK;OEQ;CFQ;OGE;CHyB;yBII;KJoB"}},"type":"js/module"}]}