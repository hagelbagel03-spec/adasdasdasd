{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  function convertPermissionStatus(status) {\n    switch (status) {\n      case 'granted':\n        return {\n          status: _expoModulesCore.PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: false,\n          granted: true\n        };\n      case 'denied':\n        return {\n          status: _expoModulesCore.PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: false,\n          granted: false\n        };\n      default:\n        return {\n          status: _expoModulesCore.PermissionStatus.UNDETERMINED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false\n        };\n    }\n  }\n  async function resolvePermissionAsync({\n    shouldAsk\n  }) {\n    if (!_expoModulesCore.Platform.isDOMAvailable) {\n      return convertPermissionStatus('denied');\n    }\n    const {\n      Notification = {}\n    } = window;\n    if (typeof Notification.requestPermission !== 'undefined') {\n      let status = Notification.permission;\n      if (shouldAsk) {\n        status = await new Promise((resolve, reject) => {\n          let resolved = false;\n          function resolveOnce(status) {\n            if (!resolved) {\n              resolved = true;\n              resolve(status);\n            }\n          }\n          // Some browsers require a callback argument and some return a Promise\n          Notification.requestPermission(resolveOnce)?.then(resolveOnce)?.catch(reject);\n        });\n      }\n      return convertPermissionStatus(status);\n    } else if (typeof navigator !== 'undefined' && navigator?.permissions?.query) {\n      // TODO(Bacon): Support `push` in the future when it's stable.\n      const query = await navigator.permissions.query({\n        name: 'notifications'\n      });\n      return convertPermissionStatus(query.state);\n    }\n    // Platforms like iOS Safari don't support Notifications so return denied.\n    return convertPermissionStatus('denied');\n  }\n  var _default = exports.default = {\n    addListener: () => {},\n    removeListeners: () => {},\n    async getPermissionsAsync() {\n      return resolvePermissionAsync({\n        shouldAsk: false\n      });\n    },\n    async requestPermissionsAsync(request) {\n      return resolvePermissionAsync({\n        shouldAsk: true\n      });\n    }\n  };\n});","lineCount":81,"map":[[6,2,1,0],[6,6,1,0,"_expoModulesCore"],[6,22,1,0],[6,25,1,0,"require"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,11,2,9,"convertPermissionStatus"],[7,34,2,32,"convertPermissionStatus"],[7,35,2,33,"status"],[7,41,2,39],[7,43,2,41],[8,4,3,4],[8,12,3,12,"status"],[8,18,3,18],[9,6,4,8],[9,11,4,13],[9,20,4,22],[10,8,5,12],[10,15,5,19],[11,10,6,16,"status"],[11,16,6,22],[11,18,6,24,"PermissionStatus"],[11,51,6,40],[11,52,6,41,"GRANTED"],[11,59,6,48],[12,10,7,16,"expires"],[12,17,7,23],[12,19,7,25],[12,26,7,32],[13,10,8,16,"canAskAgain"],[13,21,8,27],[13,23,8,29],[13,28,8,34],[14,10,9,16,"granted"],[14,17,9,23],[14,19,9,25],[15,8,10,12],[15,9,10,13],[16,6,11,8],[16,11,11,13],[16,19,11,21],[17,8,12,12],[17,15,12,19],[18,10,13,16,"status"],[18,16,13,22],[18,18,13,24,"PermissionStatus"],[18,51,13,40],[18,52,13,41,"DENIED"],[18,58,13,47],[19,10,14,16,"expires"],[19,17,14,23],[19,19,14,25],[19,26,14,32],[20,10,15,16,"canAskAgain"],[20,21,15,27],[20,23,15,29],[20,28,15,34],[21,10,16,16,"granted"],[21,17,16,23],[21,19,16,25],[22,8,17,12],[22,9,17,13],[23,6,18,8],[24,8,19,12],[24,15,19,19],[25,10,20,16,"status"],[25,16,20,22],[25,18,20,24,"PermissionStatus"],[25,51,20,40],[25,52,20,41,"UNDETERMINED"],[25,64,20,53],[26,10,21,16,"expires"],[26,17,21,23],[26,19,21,25],[26,26,21,32],[27,10,22,16,"canAskAgain"],[27,21,22,27],[27,23,22,29],[27,27,22,33],[28,10,23,16,"granted"],[28,17,23,23],[28,19,23,25],[29,8,24,12],[29,9,24,13],[30,4,25,4],[31,2,26,0],[32,2,27,0],[32,17,27,15,"resolvePermissionAsync"],[32,39,27,37,"resolvePermissionAsync"],[32,40,27,38],[33,4,27,40,"shouldAsk"],[34,2,27,51],[34,3,27,52],[34,5,27,54],[35,4,28,4],[35,8,28,8],[35,9,28,9,"Platform"],[35,34,28,17],[35,35,28,18,"isDOMAvailable"],[35,49,28,32],[35,51,28,34],[36,6,29,8],[36,13,29,15,"convertPermissionStatus"],[36,36,29,38],[36,37,29,39],[36,45,29,47],[36,46,29,48],[37,4,30,4],[38,4,31,4],[38,10,31,10],[39,6,31,12,"Notification"],[39,18,31,24],[39,21,31,27],[39,22,31,28],[40,4,31,30],[40,5,31,31],[40,8,31,34,"window"],[40,14,31,40],[41,4,32,4],[41,8,32,8],[41,15,32,15,"Notification"],[41,27,32,27],[41,28,32,28,"requestPermission"],[41,45,32,45],[41,50,32,50],[41,61,32,61],[41,63,32,63],[42,6,33,8],[42,10,33,12,"status"],[42,16,33,18],[42,19,33,21,"Notification"],[42,31,33,33],[42,32,33,34,"permission"],[42,42,33,44],[43,6,34,8],[43,10,34,12,"shouldAsk"],[43,19,34,21],[43,21,34,23],[44,8,35,12,"status"],[44,14,35,18],[44,17,35,21],[44,23,35,27],[44,27,35,31,"Promise"],[44,34,35,38],[44,35,35,39],[44,36,35,40,"resolve"],[44,43,35,47],[44,45,35,49,"reject"],[44,51,35,55],[44,56,35,60],[45,10,36,16],[45,14,36,20,"resolved"],[45,22,36,28],[45,25,36,31],[45,30,36,36],[46,10,37,16],[46,19,37,25,"resolveOnce"],[46,30,37,36,"resolveOnce"],[46,31,37,37,"status"],[46,37,37,43],[46,39,37,45],[47,12,38,20],[47,16,38,24],[47,17,38,25,"resolved"],[47,25,38,33],[47,27,38,35],[48,14,39,24,"resolved"],[48,22,39,32],[48,25,39,35],[48,29,39,39],[49,14,40,24,"resolve"],[49,21,40,31],[49,22,40,32,"status"],[49,28,40,38],[49,29,40,39],[50,12,41,20],[51,10,42,16],[52,10,43,16],[53,10,44,16,"Notification"],[53,22,44,28],[53,23,44,29,"requestPermission"],[53,40,44,46],[53,41,44,47,"resolveOnce"],[53,52,44,58],[53,53,44,59],[53,55,44,61,"then"],[53,59,44,65],[53,60,44,66,"resolveOnce"],[53,71,44,77],[53,72,44,78],[53,74,44,80,"catch"],[53,79,44,85],[53,80,44,86,"reject"],[53,86,44,92],[53,87,44,93],[54,8,45,12],[54,9,45,13],[54,10,45,14],[55,6,46,8],[56,6,47,8],[56,13,47,15,"convertPermissionStatus"],[56,36,47,38],[56,37,47,39,"status"],[56,43,47,45],[56,44,47,46],[57,4,48,4],[57,5,48,5],[57,11,49,9],[57,15,49,13],[57,22,49,20,"navigator"],[57,31,49,29],[57,36,49,34],[57,47,49,45],[57,51,49,49,"navigator"],[57,60,49,58],[57,62,49,60,"permissions"],[57,73,49,71],[57,75,49,73,"query"],[57,80,49,78],[57,82,49,80],[58,6,50,8],[59,6,51,8],[59,12,51,14,"query"],[59,17,51,19],[59,20,51,22],[59,26,51,28,"navigator"],[59,35,51,37],[59,36,51,38,"permissions"],[59,47,51,49],[59,48,51,50,"query"],[59,53,51,55],[59,54,51,56],[60,8,51,58,"name"],[60,12,51,62],[60,14,51,64],[61,6,51,80],[61,7,51,81],[61,8,51,82],[62,6,52,8],[62,13,52,15,"convertPermissionStatus"],[62,36,52,38],[62,37,52,39,"query"],[62,42,52,44],[62,43,52,45,"state"],[62,48,52,50],[62,49,52,51],[63,4,53,4],[64,4,54,4],[65,4,55,4],[65,11,55,11,"convertPermissionStatus"],[65,34,55,34],[65,35,55,35],[65,43,55,43],[65,44,55,44],[66,2,56,0],[67,2,56,1],[67,6,56,1,"_default"],[67,14,56,1],[67,17,56,1,"exports"],[67,24,56,1],[67,25,56,1,"default"],[67,32,56,1],[67,35,57,15],[68,4,58,4,"addListener"],[68,15,58,15],[68,17,58,17,"addListener"],[68,18,58,17],[68,23,58,23],[68,24,58,25],[68,25,58,26],[69,4,59,4,"removeListeners"],[69,19,59,19],[69,21,59,21,"removeListeners"],[69,22,59,21],[69,27,59,27],[69,28,59,29],[69,29,59,30],[70,4,60,4],[70,10,60,10,"getPermissionsAsync"],[70,29,60,29,"getPermissionsAsync"],[70,30,60,29],[70,32,60,32],[71,6,61,8],[71,13,61,15,"resolvePermissionAsync"],[71,35,61,37],[71,36,61,38],[72,8,61,40,"shouldAsk"],[72,17,61,49],[72,19,61,51],[73,6,61,57],[73,7,61,58],[73,8,61,59],[74,4,62,4],[74,5,62,5],[75,4,63,4],[75,10,63,10,"requestPermissionsAsync"],[75,33,63,33,"requestPermissionsAsync"],[75,34,63,34,"request"],[75,41,63,41],[75,43,63,43],[76,6,64,8],[76,13,64,15,"resolvePermissionAsync"],[76,35,64,37],[76,36,64,38],[77,8,64,40,"shouldAsk"],[77,17,64,49],[77,19,64,51],[78,6,64,56],[78,7,64,57],[78,8,64,58],[79,4,65,4],[80,2,66,0],[80,3,66,1],[81,0,66,1],[81,3]],"functionMap":{"names":["<global>","convertPermissionStatus","resolvePermissionAsync","Promise$argument_0","resolveOnce","default.addListener","default.removeListeners","default.getPermissionsAsync","default.requestPermissionsAsync"],"mappings":"AAA;ACC;CDwB;AEC;uCCQ;gBCE;iBDK;aDG;CFW;iBKE,SL;qBMC,SN;IOC;KPE;IQC;KRE"}},"type":"js/module"}]}