{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./PushTokenManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":50,"index":96}}],"key":"/U/z9wvFThAkR9FZ1qxFHdWzZ18=","exportNames":["*"]}},{"name":"./warnOfExpoGoPushUsage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":64,"index":161}}],"key":"JoKHHQXXGY91wSaWh9AbqdpRHBQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addPushTokenListener = addPushTokenListener;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _PushTokenManager = _interopRequireDefault(require(_dependencyMap[2], \"./PushTokenManager\"));\n  var _warnOfExpoGoPushUsage = require(_dependencyMap[3], \"./warnOfExpoGoPushUsage\");\n  // Web uses SyntheticEventEmitter\n  const newTokenEventName = 'onDevicePushToken';\n  /**\n   * In rare situations, a push token may be changed by the push notification service while the app is running.\n   * When a token is rolled, the old one becomes invalid and sending notifications to it will fail.\n   * A push token listener will let you handle this situation gracefully by registering the new token with your backend right away.\n   * @param listener A function accepting a push token as an argument, it will be called whenever the push token changes.\n   * @return An [`EventSubscription`](#eventsubscription) object represents the subscription of the provided listener.\n   * @header fetch\n   * @example Registering a push token listener using a React hook.\n   * ```jsx\n   * import React from 'react';\n   * import * as Notifications from 'expo-notifications';\n   *\n   * import { registerDevicePushTokenAsync } from '../api';\n   *\n   * export default function App() {\n   *   React.useEffect(() => {\n   *     const subscription = Notifications.addPushTokenListener(registerDevicePushTokenAsync);\n   *     return () => subscription.remove();\n   *   }, []);\n   *\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   */\n  function addPushTokenListener(listener) {\n    (0, _warnOfExpoGoPushUsage.warnOfExpoGoPushUsage)();\n    return _PushTokenManager.default.addListener(newTokenEventName, ({\n      devicePushToken\n    }) => listener({\n      data: devicePushToken,\n      type: _expoModulesCore.Platform.OS\n    }));\n  }\n});","lineCount":47,"map":[[7,2,1,0],[7,6,1,0,"_expoModulesCore"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_PushTokenManager"],[8,23,2,0],[8,26,2,0,"_interopRequireDefault"],[8,48,2,0],[8,49,2,0,"require"],[8,56,2,0],[8,57,2,0,"_dependencyMap"],[8,71,2,0],[9,2,3,0],[9,6,3,0,"_warnOfExpoGoPushUsage"],[9,28,3,0],[9,31,3,0,"require"],[9,38,3,0],[9,39,3,0,"_dependencyMap"],[9,53,3,0],[10,2,4,0],[11,2,5,0],[11,8,5,6,"newTokenEventName"],[11,25,5,23],[11,28,5,26],[11,47,5,45],[12,2,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,2,32,7],[38,11,32,16,"addPushTokenListener"],[38,31,32,36,"addPushTokenListener"],[38,32,32,37,"listener"],[38,40,32,45],[38,42,32,47],[39,4,33,4],[39,8,33,4,"warnOfExpoGoPushUsage"],[39,52,33,25],[39,54,33,26],[39,55,33,27],[40,4,34,4],[40,11,34,11,"PushTokenManager"],[40,36,34,27],[40,37,34,28,"addListener"],[40,48,34,39],[40,49,34,40,"newTokenEventName"],[40,66,34,57],[40,68,34,59],[40,69,34,60],[41,6,34,62,"devicePushToken"],[42,4,34,78],[42,5,34,79],[42,10,34,84,"listener"],[42,18,34,92],[42,19,34,93],[43,6,34,95,"data"],[43,10,34,99],[43,12,34,101,"devicePushToken"],[43,27,34,116],[44,6,34,118,"type"],[44,10,34,122],[44,12,34,124,"Platform"],[44,37,34,132],[44,38,34,133,"OS"],[45,4,34,136],[45,5,34,137],[45,6,34,138],[45,7,34,139],[46,2,35,0],[47,0,35,1],[47,3]],"functionMap":{"names":["<global>","addPushTokenListener","PushTokenManager.addListener$argument_1"],"mappings":"AAA;OC+B;2DCE,+ED;CDC"}},"type":"js/module"}]}