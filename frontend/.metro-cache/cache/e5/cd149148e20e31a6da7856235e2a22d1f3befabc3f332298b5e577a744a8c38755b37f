{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@ide/backoff","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"B9a/kyy9aP0LgQkY79+QgjlpSv0=","exportNames":["*"]}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":78,"index":186}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"../ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":67,"index":254}}],"key":"3RTx8KhSs/2ZB3r9U5DaT+SEuk4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateDevicePushTokenAsync = updateDevicePushTokenAsync;\n  var _backoff = require(_dependencyMap[1], \"@ide/backoff\");\n  var Application = _interopRequireWildcard(require(_dependencyMap[2], \"expo-application\"));\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[4], \"../ServerRegistrationModule\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const updateDevicePushTokenUrl = 'https://exp.host/--/api/v2/push/updateDeviceToken';\n  async function updateDevicePushTokenAsync(signal, token) {\n    const doUpdateDevicePushTokenAsync = async retry => {\n      const [development, deviceId] = await Promise.all([shouldUseDevelopmentNotificationService(), getDeviceIdAsync()]);\n      const body = {\n        deviceId: deviceId.toLowerCase(),\n        development,\n        deviceToken: token.data,\n        appId: Application.applicationId,\n        type: getTypeOfToken(token)\n      };\n      try {\n        const response = await fetch(updateDevicePushTokenUrl, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(body),\n          signal\n        });\n        // Help debug erroring servers\n        if (!response.ok) {\n          console.debug('[expo-notifications] Error encountered while updating the device push token with the server:', await response.text());\n        }\n        // Retry if request failed\n        if (!response.ok) {\n          retry();\n        }\n      } catch (error) {\n        // Error returned if the request is aborted should be an 'AbortError'. In\n        // React Native fetch is polyfilled using `whatwg-fetch` which:\n        // - creates `AbortError`s like this\n        //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L505\n        // - which creates exceptions like\n        //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L490-L494\n        if (typeof error === 'object' && error?.name === 'AbortError') {\n          // We don't consider AbortError a failure, it's a sign somewhere else the\n          // request is expected to succeed and we don't need this one, so let's\n          // just return.\n          return;\n        }\n        console.warn('[expo-notifications] Error thrown while updating the device push token with the server:', error);\n        retry();\n      }\n    };\n    let shouldTry = true;\n    const retry = () => {\n      shouldTry = true;\n    };\n    let retriesCount = 0;\n    const initialBackoff = 500; // 0.5 s\n    const backoffOptions = {\n      maxBackoff: 2 * 60 * 1000 // 2 minutes\n    };\n    let nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n    while (shouldTry && !signal.aborted) {\n      // Will be set to true by `retry` if it's called\n      shouldTry = false;\n      await doUpdateDevicePushTokenAsync(retry);\n      // Do not wait if we won't retry\n      if (shouldTry && !signal.aborted) {\n        nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n        retriesCount += 1;\n        await new Promise(resolve => setTimeout(resolve, nextBackoffInterval));\n      }\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  async function getDeviceIdAsync() {\n    try {\n      if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n      }\n      return await _ServerRegistrationModule.default.getInstallationIdAsync();\n    } catch (e) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_DEVICE_ID', `Could not fetch the installation ID of the application: ${e}.`);\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  async function shouldUseDevelopmentNotificationService() {\n    if (_expoModulesCore.Platform.OS === 'ios') {\n      try {\n        const notificationServiceEnvironment = await Application.getIosPushNotificationServiceEnvironmentAsync();\n        if (notificationServiceEnvironment === 'development') {\n          return true;\n        }\n      } catch {\n        // We can't do anything here, we'll fallback to false then.\n      }\n    }\n    return false;\n  }\n});","lineCount":116,"map":[[7,2,1,0],[7,6,1,0,"_backoff"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"Application"],[8,17,2,0],[8,20,2,0,"_interopRequireWildcard"],[8,43,2,0],[8,44,2,0,"require"],[8,51,2,0],[8,52,2,0,"_dependencyMap"],[8,66,2,0],[9,2,3,0],[9,6,3,0,"_expoModulesCore"],[9,22,3,0],[9,25,3,0,"require"],[9,32,3,0],[9,33,3,0,"_dependencyMap"],[9,47,3,0],[10,2,4,0],[10,6,4,0,"_ServerRegistrationModule"],[10,31,4,0],[10,34,4,0,"_interopRequireDefault"],[10,56,4,0],[10,57,4,0,"require"],[10,64,4,0],[10,65,4,0,"_dependencyMap"],[10,79,4,0],[11,2,4,67],[11,11,4,67,"_interopRequireWildcard"],[11,35,4,67,"e"],[11,36,4,67],[11,38,4,67,"t"],[11,39,4,67],[11,68,4,67,"WeakMap"],[11,75,4,67],[11,81,4,67,"r"],[11,82,4,67],[11,89,4,67,"WeakMap"],[11,96,4,67],[11,100,4,67,"n"],[11,101,4,67],[11,108,4,67,"WeakMap"],[11,115,4,67],[11,127,4,67,"_interopRequireWildcard"],[11,150,4,67],[11,162,4,67,"_interopRequireWildcard"],[11,163,4,67,"e"],[11,164,4,67],[11,166,4,67,"t"],[11,167,4,67],[11,176,4,67,"t"],[11,177,4,67],[11,181,4,67,"e"],[11,182,4,67],[11,186,4,67,"e"],[11,187,4,67],[11,188,4,67,"__esModule"],[11,198,4,67],[11,207,4,67,"e"],[11,208,4,67],[11,214,4,67,"o"],[11,215,4,67],[11,217,4,67,"i"],[11,218,4,67],[11,220,4,67,"f"],[11,221,4,67],[11,226,4,67,"__proto__"],[11,235,4,67],[11,243,4,67,"default"],[11,250,4,67],[11,252,4,67,"e"],[11,253,4,67],[11,270,4,67,"e"],[11,271,4,67],[11,294,4,67,"e"],[11,295,4,67],[11,320,4,67,"e"],[11,321,4,67],[11,330,4,67,"f"],[11,331,4,67],[11,337,4,67,"o"],[11,338,4,67],[11,341,4,67,"t"],[11,342,4,67],[11,345,4,67,"n"],[11,346,4,67],[11,349,4,67,"r"],[11,350,4,67],[11,358,4,67,"o"],[11,359,4,67],[11,360,4,67,"has"],[11,363,4,67],[11,364,4,67,"e"],[11,365,4,67],[11,375,4,67,"o"],[11,376,4,67],[11,377,4,67,"get"],[11,380,4,67],[11,381,4,67,"e"],[11,382,4,67],[11,385,4,67,"o"],[11,386,4,67],[11,387,4,67,"set"],[11,390,4,67],[11,391,4,67,"e"],[11,392,4,67],[11,394,4,67,"f"],[11,395,4,67],[11,411,4,67,"t"],[11,412,4,67],[11,416,4,67,"e"],[11,417,4,67],[11,433,4,67,"t"],[11,434,4,67],[11,441,4,67,"hasOwnProperty"],[11,455,4,67],[11,456,4,67,"call"],[11,460,4,67],[11,461,4,67,"e"],[11,462,4,67],[11,464,4,67,"t"],[11,465,4,67],[11,472,4,67,"i"],[11,473,4,67],[11,477,4,67,"o"],[11,478,4,67],[11,481,4,67,"Object"],[11,487,4,67],[11,488,4,67,"defineProperty"],[11,502,4,67],[11,507,4,67,"Object"],[11,513,4,67],[11,514,4,67,"getOwnPropertyDescriptor"],[11,538,4,67],[11,539,4,67,"e"],[11,540,4,67],[11,542,4,67,"t"],[11,543,4,67],[11,550,4,67,"i"],[11,551,4,67],[11,552,4,67,"get"],[11,555,4,67],[11,559,4,67,"i"],[11,560,4,67],[11,561,4,67,"set"],[11,564,4,67],[11,568,4,67,"o"],[11,569,4,67],[11,570,4,67,"f"],[11,571,4,67],[11,573,4,67,"t"],[11,574,4,67],[11,576,4,67,"i"],[11,577,4,67],[11,581,4,67,"f"],[11,582,4,67],[11,583,4,67,"t"],[11,584,4,67],[11,588,4,67,"e"],[11,589,4,67],[11,590,4,67,"t"],[11,591,4,67],[11,602,4,67,"f"],[11,603,4,67],[11,608,4,67,"e"],[11,609,4,67],[11,611,4,67,"t"],[11,612,4,67],[12,2,5,0],[12,8,5,6,"updateDevicePushTokenUrl"],[12,32,5,30],[12,35,5,33],[12,86,5,84],[13,2,6,7],[13,17,6,22,"updateDevicePushTokenAsync"],[13,43,6,48,"updateDevicePushTokenAsync"],[13,44,6,49,"signal"],[13,50,6,55],[13,52,6,57,"token"],[13,57,6,62],[13,59,6,64],[14,4,7,4],[14,10,7,10,"doUpdateDevicePushTokenAsync"],[14,38,7,38],[14,41,7,41],[14,47,7,48,"retry"],[14,52,7,53],[14,56,7,58],[15,6,8,8],[15,12,8,14],[15,13,8,15,"development"],[15,24,8,26],[15,26,8,28,"deviceId"],[15,34,8,36],[15,35,8,37],[15,38,8,40],[15,44,8,46,"Promise"],[15,51,8,53],[15,52,8,54,"all"],[15,55,8,57],[15,56,8,58],[15,57,9,12,"shouldUseDevelopmentNotificationService"],[15,96,9,51],[15,97,9,52],[15,98,9,53],[15,100,10,12,"getDeviceIdAsync"],[15,116,10,28],[15,117,10,29],[15,118,10,30],[15,119,11,9],[15,120,11,10],[16,6,12,8],[16,12,12,14,"body"],[16,16,12,18],[16,19,12,21],[17,8,13,12,"deviceId"],[17,16,13,20],[17,18,13,22,"deviceId"],[17,26,13,30],[17,27,13,31,"toLowerCase"],[17,38,13,42],[17,39,13,43],[17,40,13,44],[18,8,14,12,"development"],[18,19,14,23],[19,8,15,12,"deviceToken"],[19,19,15,23],[19,21,15,25,"token"],[19,26,15,30],[19,27,15,31,"data"],[19,31,15,35],[20,8,16,12,"appId"],[20,13,16,17],[20,15,16,19,"Application"],[20,26,16,30],[20,27,16,31,"applicationId"],[20,40,16,44],[21,8,17,12,"type"],[21,12,17,16],[21,14,17,18,"getTypeOfToken"],[21,28,17,32],[21,29,17,33,"token"],[21,34,17,38],[22,6,18,8],[22,7,18,9],[23,6,19,8],[23,10,19,12],[24,8,20,12],[24,14,20,18,"response"],[24,22,20,26],[24,25,20,29],[24,31,20,35,"fetch"],[24,36,20,40],[24,37,20,41,"updateDevicePushTokenUrl"],[24,61,20,65],[24,63,20,67],[25,10,21,16,"method"],[25,16,21,22],[25,18,21,24],[25,24,21,30],[26,10,22,16,"headers"],[26,17,22,23],[26,19,22,25],[27,12,23,20],[27,26,23,34],[27,28,23,36],[28,10,24,16],[28,11,24,17],[29,10,25,16,"body"],[29,14,25,20],[29,16,25,22,"JSON"],[29,20,25,26],[29,21,25,27,"stringify"],[29,30,25,36],[29,31,25,37,"body"],[29,35,25,41],[29,36,25,42],[30,10,26,16,"signal"],[31,8,27,12],[31,9,27,13],[31,10,27,14],[32,8,28,12],[33,8,29,12],[33,12,29,16],[33,13,29,17,"response"],[33,21,29,25],[33,22,29,26,"ok"],[33,24,29,28],[33,26,29,30],[34,10,30,16,"console"],[34,17,30,23],[34,18,30,24,"debug"],[34,23,30,29],[34,24,30,30],[34,118,30,124],[34,120,30,126],[34,126,30,132,"response"],[34,134,30,140],[34,135,30,141,"text"],[34,139,30,145],[34,140,30,146],[34,141,30,147],[34,142,30,148],[35,8,31,12],[36,8,32,12],[37,8,33,12],[37,12,33,16],[37,13,33,17,"response"],[37,21,33,25],[37,22,33,26,"ok"],[37,24,33,28],[37,26,33,30],[38,10,34,16,"retry"],[38,15,34,21],[38,16,34,22],[38,17,34,23],[39,8,35,12],[40,6,36,8],[40,7,36,9],[40,8,37,8],[40,15,37,15,"error"],[40,20,37,20],[40,22,37,22],[41,8,38,12],[42,8,39,12],[43,8,40,12],[44,8,41,12],[45,8,42,12],[46,8,43,12],[47,8,44,12],[47,12,44,16],[47,19,44,23,"error"],[47,24,44,28],[47,29,44,33],[47,37,44,41],[47,41,44,45,"error"],[47,46,44,50],[47,48,44,52,"name"],[47,52,44,56],[47,57,44,61],[47,69,44,73],[47,71,44,75],[48,10,45,16],[49,10,46,16],[50,10,47,16],[51,10,48,16],[52,8,49,12],[53,8,50,12,"console"],[53,15,50,19],[53,16,50,20,"warn"],[53,20,50,24],[53,21,50,25],[53,110,50,114],[53,112,50,116,"error"],[53,117,50,121],[53,118,50,122],[54,8,51,12,"retry"],[54,13,51,17],[54,14,51,18],[54,15,51,19],[55,6,52,8],[56,4,53,4],[56,5,53,5],[57,4,54,4],[57,8,54,8,"shouldTry"],[57,17,54,17],[57,20,54,20],[57,24,54,24],[58,4,55,4],[58,10,55,10,"retry"],[58,15,55,15],[58,18,55,18,"retry"],[58,19,55,18],[58,24,55,24],[59,6,56,8,"shouldTry"],[59,15,56,17],[59,18,56,20],[59,22,56,24],[60,4,57,4],[60,5,57,5],[61,4,58,4],[61,8,58,8,"retriesCount"],[61,20,58,20],[61,23,58,23],[61,24,58,24],[62,4,59,4],[62,10,59,10,"initialBackoff"],[62,24,59,24],[62,27,59,27],[62,30,59,30],[62,31,59,31],[62,32,59,32],[63,4,60,4],[63,10,60,10,"backoffOptions"],[63,24,60,24],[63,27,60,27],[64,6,61,8,"maxBackoff"],[64,16,61,18],[64,18,61,20],[64,19,61,21],[64,22,61,24],[64,24,61,26],[64,27,61,29],[64,31,61,33],[64,32,61,35],[65,4,62,4],[65,5,62,5],[66,4,63,4],[66,8,63,8,"nextBackoffInterval"],[66,27,63,27],[66,30,63,30],[66,34,63,30,"computeNextBackoffInterval"],[66,69,63,56],[66,71,63,57,"initialBackoff"],[66,85,63,71],[66,87,63,73,"retriesCount"],[66,99,63,85],[66,101,63,87,"backoffOptions"],[66,115,63,101],[66,116,63,102],[67,4,64,4],[67,11,64,11,"shouldTry"],[67,20,64,20],[67,24,64,24],[67,25,64,25,"signal"],[67,31,64,31],[67,32,64,32,"aborted"],[67,39,64,39],[67,41,64,41],[68,6,65,8],[69,6,66,8,"shouldTry"],[69,15,66,17],[69,18,66,20],[69,23,66,25],[70,6,67,8],[70,12,67,14,"doUpdateDevicePushTokenAsync"],[70,40,67,42],[70,41,67,43,"retry"],[70,46,67,48],[70,47,67,49],[71,6,68,8],[72,6,69,8],[72,10,69,12,"shouldTry"],[72,19,69,21],[72,23,69,25],[72,24,69,26,"signal"],[72,30,69,32],[72,31,69,33,"aborted"],[72,38,69,40],[72,40,69,42],[73,8,70,12,"nextBackoffInterval"],[73,27,70,31],[73,30,70,34],[73,34,70,34,"computeNextBackoffInterval"],[73,69,70,60],[73,71,70,61,"initialBackoff"],[73,85,70,75],[73,87,70,77,"retriesCount"],[73,99,70,89],[73,101,70,91,"backoffOptions"],[73,115,70,105],[73,116,70,106],[74,8,71,12,"retriesCount"],[74,20,71,24],[74,24,71,28],[74,25,71,29],[75,8,72,12],[75,14,72,18],[75,18,72,22,"Promise"],[75,25,72,29],[75,26,72,31,"resolve"],[75,33,72,38],[75,37,72,43,"setTimeout"],[75,47,72,53],[75,48,72,54,"resolve"],[75,55,72,61],[75,57,72,63,"nextBackoffInterval"],[75,76,72,82],[75,77,72,83],[75,78,72,84],[76,6,73,8],[77,4,74,4],[78,2,75,0],[79,2,76,0],[80,2,77,0],[80,17,77,15,"getDeviceIdAsync"],[80,33,77,31,"getDeviceIdAsync"],[80,34,77,31],[80,36,77,34],[81,4,78,4],[81,8,78,8],[82,6,79,8],[82,10,79,12],[82,11,79,13,"ServerRegistrationModule"],[82,44,79,37],[82,45,79,38,"getInstallationIdAsync"],[82,67,79,60],[82,69,79,62],[83,8,80,12],[83,14,80,18],[83,18,80,22,"UnavailabilityError"],[83,54,80,41],[83,55,80,42],[83,85,80,72],[83,87,80,74],[83,111,80,98],[83,112,80,99],[84,6,81,8],[85,6,82,8],[85,13,82,15],[85,19,82,21,"ServerRegistrationModule"],[85,52,82,45],[85,53,82,46,"getInstallationIdAsync"],[85,75,82,68],[85,76,82,69],[85,77,82,70],[86,4,83,4],[86,5,83,5],[86,6,84,4],[86,13,84,11,"e"],[86,14,84,12],[86,16,84,14],[87,6,85,8],[87,12,85,14],[87,16,85,18,"CodedError"],[87,43,85,28],[87,44,85,29],[87,73,85,58],[87,75,85,60],[87,134,85,119,"e"],[87,135,85,120],[87,138,85,123],[87,139,85,124],[88,4,86,4],[89,2,87,0],[90,2,88,0],[91,2,89,0],[91,11,89,9,"getTypeOfToken"],[91,25,89,23,"getTypeOfToken"],[91,26,89,24,"devicePushToken"],[91,41,89,39],[91,43,89,41],[92,4,90,4],[92,12,90,12,"devicePushToken"],[92,27,90,27],[92,28,90,28,"type"],[92,32,90,32],[93,6,91,8],[93,11,91,13],[93,16,91,18],[94,8,92,12],[94,15,92,19],[94,21,92,25],[95,6,93,8],[95,11,93,13],[95,20,93,22],[96,8,94,12],[96,15,94,19],[96,20,94,24],[97,6,95,8],[98,6,96,8],[99,8,97,12],[99,15,97,19,"devicePushToken"],[99,30,97,34],[99,31,97,35,"type"],[99,35,97,39],[100,4,98,4],[101,2,99,0],[102,2,100,0],[103,2,101,0],[103,17,101,15,"shouldUseDevelopmentNotificationService"],[103,56,101,54,"shouldUseDevelopmentNotificationService"],[103,57,101,54],[103,59,101,57],[104,4,102,4],[104,8,102,8,"Platform"],[104,33,102,16],[104,34,102,17,"OS"],[104,36,102,19],[104,41,102,24],[104,46,102,29],[104,48,102,31],[105,6,103,8],[105,10,103,12],[106,8,104,12],[106,14,104,18,"notificationServiceEnvironment"],[106,44,104,48],[106,47,104,51],[106,53,104,57,"Application"],[106,64,104,68],[106,65,104,69,"getIosPushNotificationServiceEnvironmentAsync"],[106,110,104,114],[106,111,104,115],[106,112,104,116],[107,8,105,12],[107,12,105,16,"notificationServiceEnvironment"],[107,42,105,46],[107,47,105,51],[107,60,105,64],[107,62,105,66],[108,10,106,16],[108,17,106,23],[108,21,106,27],[109,8,107,12],[110,6,108,8],[110,7,108,9],[110,8,109,8],[110,14,109,14],[111,8,110,12],[112,6,110,12],[113,4,112,4],[114,4,113,4],[114,11,113,11],[114,16,113,16],[115,2,114,0],[116,0,114,1],[116,3]],"functionMap":{"names":["<global>","updateDevicePushTokenAsync","doUpdateDevicePushTokenAsync","retry","Promise$argument_0","getDeviceIdAsync","getTypeOfToken","shouldUseDevelopmentNotificationService"],"mappings":"AAA;OCK;yCCC;KD8C;kBEE;KFE;8BGe,qDH;CDG;AKE;CLU;AME;CNU;AOE;CPa"}},"type":"js/module"}]}