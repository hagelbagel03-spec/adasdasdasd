{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = cancelScheduledNotificationAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _NotificationScheduler = _interopRequireDefault(require(_dependencyMap[2], \"./NotificationScheduler\"));\n  /**\n   * Cancels a single scheduled notification. The scheduled notification of given ID will not trigger.\n   * @param identifier The notification identifier with which `scheduleNotificationAsync` method resolved when the notification has been scheduled.\n   * @return A Promise resolves once the scheduled notification is successfully canceled or if there is no scheduled notification for a given identifier.\n   * @example Schedule and then cancel the notification:\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * async function scheduleAndCancel() {\n   *   const identifier = await Notifications.scheduleNotificationAsync({\n   *     content: {\n   *       title: 'Hey!',\n   *     },\n   *     trigger: { seconds: 60, repeats: true },\n   *   });\n   *   await Notifications.cancelScheduledNotificationAsync(identifier);\n   * }\n   * ```\n   * @header schedule\n   */\n  async function cancelScheduledNotificationAsync(identifier) {\n    if (!_NotificationScheduler.default.cancelScheduledNotificationAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n    }\n    return await _NotificationScheduler.default.cancelScheduledNotificationAsync(identifier);\n  }\n});","lineCount":35,"map":[[7,2,1,0],[7,6,1,0,"_expoModulesCore"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_NotificationScheduler"],[8,28,2,0],[8,31,2,0,"_interopRequireDefault"],[8,53,2,0],[8,54,2,0,"require"],[8,61,2,0],[8,62,2,0,"_dependencyMap"],[8,76,2,0],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,2,23,15],[29,17,23,30,"cancelScheduledNotificationAsync"],[29,49,23,62,"cancelScheduledNotificationAsync"],[29,50,23,63,"identifier"],[29,60,23,73],[29,62,23,75],[30,4,24,4],[30,8,24,8],[30,9,24,9,"NotificationScheduler"],[30,39,24,30],[30,40,24,31,"cancelScheduledNotificationAsync"],[30,72,24,63],[30,74,24,65],[31,6,25,8],[31,12,25,14],[31,16,25,18,"UnavailabilityError"],[31,52,25,37],[31,53,25,38],[31,68,25,53],[31,70,25,55],[31,104,25,89],[31,105,25,90],[32,4,26,4],[33,4,27,4],[33,11,27,11],[33,17,27,17,"NotificationScheduler"],[33,47,27,38],[33,48,27,39,"cancelScheduledNotificationAsync"],[33,80,27,71],[33,81,27,72,"identifier"],[33,91,27,82],[33,92,27,83],[34,2,28,0],[35,0,28,1],[35,3]],"functionMap":{"names":["<global>","cancelScheduledNotificationAsync"],"mappings":"AAA;eCsB;CDK"}},"type":"js/module"}]}