{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationCategoriesModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":74,"index":131}}],"key":"ylysGJBZfvZJMOvFvfdI1mTjAA8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = setNotificationCategoryAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _NotificationCategoriesModule = _interopRequireDefault(require(_dependencyMap[2], \"./NotificationCategoriesModule\"));\n  /**\n   * Sets the new notification category.\n   * @param identifier A string to associate as the ID of this category. You will pass this string in as the `categoryIdentifier`\n   * in your [`NotificationContent`](#notificationcontent) to associate a notification with this category.\n   * > Don't use the characters `:` or `-` in your category identifier. If you do, categories might not work as expected.\n   * @param actions An array of [`NotificationAction`](#notificationaction), which describe the actions associated with this category.\n   * @param options An optional object of additional configuration options for your category.\n   * @return A Promise which resolves to the category you just have created.\n   * @platform android\n   * @platform ios\n   * @header categories\n   */\n  async function setNotificationCategoryAsync(identifier, actions, options) {\n    if (!_NotificationCategoriesModule.default.setNotificationCategoryAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n    }\n    return await _NotificationCategoriesModule.default.setNotificationCategoryAsync(identifier, actions, options);\n  }\n});","lineCount":27,"map":[[7,2,1,0],[7,6,1,0,"_expoModulesCore"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_NotificationCategoriesModule"],[8,35,2,0],[8,38,2,0,"_interopRequireDefault"],[8,60,2,0],[8,61,2,0,"require"],[8,68,2,0],[8,69,2,0,"_dependencyMap"],[8,83,2,0],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,2,15,15],[21,17,15,30,"setNotificationCategoryAsync"],[21,45,15,58,"setNotificationCategoryAsync"],[21,46,15,59,"identifier"],[21,56,15,69],[21,58,15,71,"actions"],[21,65,15,78],[21,67,15,80,"options"],[21,74,15,87],[21,76,15,89],[22,4,16,4],[22,8,16,8],[22,9,16,9,"NotificationCategoriesModule"],[22,46,16,37],[22,47,16,38,"setNotificationCategoryAsync"],[22,75,16,66],[22,77,16,68],[23,6,17,8],[23,12,17,14],[23,16,17,18,"UnavailabilityError"],[23,52,17,37],[23,53,17,38],[23,68,17,53],[23,70,17,55],[23,100,17,85],[23,101,17,86],[24,4,18,4],[25,4,19,4],[25,11,19,11],[25,17,19,17,"NotificationCategoriesModule"],[25,54,19,45],[25,55,19,46,"setNotificationCategoryAsync"],[25,83,19,74],[25,84,19,75,"identifier"],[25,94,19,85],[25,96,19,87,"actions"],[25,103,19,94],[25,105,19,96,"options"],[25,112,19,103],[25,113,19,104],[26,2,20,0],[27,0,20,1],[27,3]],"functionMap":{"names":["<global>","setNotificationCategoryAsync"],"mappings":"AAA;eCc;CDK"}},"type":"js/module"}]}