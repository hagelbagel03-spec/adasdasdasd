{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":39,"index":88}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":78,"index":167}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./DevicePushTokenAutoRegistration.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":93,"index":261}}],"key":"ZH5Mz79TLJE/dTuAobGrlWmVWRo=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":262},"end":{"line":5,"column":66,"index":328}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":64,"index":393}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getExpoPushTokenAsync;\n  var Application = _interopRequireWildcard(require(_dependencyMap[1], \"expo-application\"));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[2], \"expo-constants\"));\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _DevicePushTokenAutoRegistration = require(_dependencyMap[4], \"./DevicePushTokenAutoRegistration.fx\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[5], \"./ServerRegistrationModule\"));\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[6], \"./getDevicePushTokenAsync\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const productionBaseUrl = 'https://exp.host/--/api/v2/';\n  /**\n   * Returns an Expo token that can be used to send a push notification to the device using Expo's push notifications service.\n   *\n   * This method makes requests to the Expo's servers. It can get rejected in cases where the request itself fails\n   * (for example, due to the device being offline, experiencing a network timeout, or other HTTPS request failures).\n   * To provide offline support to your users, you should `try/catch` this method and implement retry logic to attempt\n   * to get the push token later, once the device is back online.\n   *\n   * > For Expo's backend to be able to send notifications to your app, you will need to provide it with push notification keys.\n   * For more information, see [credentials](/push-notifications/push-notifications-setup/#get-credentials-for-development-builds) in the push notifications setup.\n   *\n   * @param options Object allowing you to pass in push notification configuration.\n   * @return Returns a `Promise` that resolves to an object representing acquired push token.\n   * @header fetch\n   *\n   * @example\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function registerForPushNotificationsAsync(userId: string) {\n   *   const expoPushToken = await Notifications.getExpoPushTokenAsync({\n   *    projectId: 'your-project-id',\n   *   });\n   *\n   *   await fetch('https://example.com/', {\n   *     method: 'POST',\n   *     headers: {\n   *       'Content-Type': 'application/json',\n   *     },\n   *     body: JSON.stringify({\n   *       userId,\n   *       expoPushToken,\n   *     }),\n   *   });\n   * }\n   * ```\n   */\n  async function getExpoPushTokenAsync(options = {}) {\n    const devicePushToken = options.devicePushToken || (await (0, _getDevicePushTokenAsync.default)());\n    const deviceId = options.deviceId || (await getDeviceIdAsync());\n    // Depending on the runtime environment, the default may be located in various places.\n    const projectId = options.projectId || _expoConstants.default.easConfig?.projectId || _expoConstants.default.expoConfig?.extra?.eas?.projectId;\n    if (!projectId) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_EXPERIENCE_ID', `No \"projectId\" found. If \"projectId\" can't be inferred from the manifest (for instance, in bare workflow), you have to pass it in yourself.`);\n    }\n    const applicationId = options.applicationId || Application.applicationId;\n    if (!applicationId) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_APPLICATION_ID', `No \"applicationId\" found. If it can't be inferred from native configuration by expo-application, you have to pass it in yourself.`);\n    }\n    const type = options.type || getTypeOfToken(devicePushToken);\n    const development = options.development || (await shouldUseDevelopmentNotificationService());\n    const baseUrl = options.baseUrl ?? productionBaseUrl;\n    const url = options.url ?? `${baseUrl}push/getExpoPushToken`;\n    const body = {\n      type,\n      deviceId: deviceId.toLowerCase(),\n      development,\n      appId: applicationId,\n      deviceToken: getDeviceToken(devicePushToken),\n      projectId\n    };\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).catch(error => {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NETWORK_ERROR', `Error encountered while fetching Expo token: ${error}.`);\n    });\n    if (!response.ok) {\n      const statusInfo = response.statusText || response.status;\n      let body = undefined;\n      try {\n        body = await response.text();\n      } catch {\n        // do nothing\n      }\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Error encountered while fetching Expo token, expected an OK response, received: ${statusInfo} (body: \"${body}\").`);\n    }\n    const expoPushToken = getExpoPushToken(await parseResponse(response));\n    try {\n      if (options.url || options.baseUrl) {\n        console.debug(`[expo-notifications] Since the URL endpoint to register in has been customized in the options, expo-notifications won't try to auto-update the device push token on the server.`);\n      } else {\n        await (0, _DevicePushTokenAutoRegistration.setAutoServerRegistrationEnabledAsync)(true);\n      }\n    } catch (e) {\n      console.warn('[expo-notifications] Could not enable automatically registering new device tokens with the Expo notification service', e);\n    }\n    return {\n      type: 'expo',\n      data: expoPushToken\n    };\n  }\n  async function parseResponse(response) {\n    try {\n      return await response.json();\n    } catch {\n      try {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received body: ${JSON.stringify(await response.text())}.`);\n      } catch {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received response: ${JSON.stringify(response)}.`);\n      }\n    }\n  }\n  function getExpoPushToken(data) {\n    if (!data || !(typeof data === 'object') || !data.data || !(typeof data.data === 'object') || !data.data.expoPushToken || !(typeof data.data.expoPushToken === 'string')) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Malformed response from server, expected \"{ data: { expoPushToken: string } }\", received: ${JSON.stringify(data, null, 2)}.`);\n    }\n    return data.data.expoPushToken;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  async function getDeviceIdAsync() {\n    try {\n      if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n      }\n      return await _ServerRegistrationModule.default.getInstallationIdAsync();\n    } catch (e) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIF_DEVICE_ID', `Could not have fetched installation ID of the application: ${e}.`);\n    }\n  }\n  function getDeviceToken(devicePushToken) {\n    if (typeof devicePushToken.data === 'string') {\n      return devicePushToken.data;\n    }\n    return JSON.stringify(devicePushToken.data);\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  async function shouldUseDevelopmentNotificationService() {\n    if (_expoModulesCore.Platform.OS === 'ios') {\n      try {\n        const notificationServiceEnvironment = await Application.getIosPushNotificationServiceEnvironmentAsync();\n        if (notificationServiceEnvironment === 'development') {\n          return true;\n        }\n      } catch {\n        // We can't do anything here, we'll fallback to false then.\n      }\n    }\n    return false;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n});","lineCount":170,"map":[[7,2,1,0],[7,6,1,0,"Application"],[7,17,1,0],[7,20,1,0,"_interopRequireWildcard"],[7,43,1,0],[7,44,1,0,"require"],[7,51,1,0],[7,52,1,0,"_dependencyMap"],[7,66,1,0],[8,2,2,0],[8,6,2,0,"_expoConstants"],[8,20,2,0],[8,23,2,0,"_interopRequireDefault"],[8,45,2,0],[8,46,2,0,"require"],[8,53,2,0],[8,54,2,0,"_dependencyMap"],[8,68,2,0],[9,2,3,0],[9,6,3,0,"_expoModulesCore"],[9,22,3,0],[9,25,3,0,"require"],[9,32,3,0],[9,33,3,0,"_dependencyMap"],[9,47,3,0],[10,2,4,0],[10,6,4,0,"_DevicePushTokenAutoRegistration"],[10,38,4,0],[10,41,4,0,"require"],[10,48,4,0],[10,49,4,0,"_dependencyMap"],[10,63,4,0],[11,2,5,0],[11,6,5,0,"_ServerRegistrationModule"],[11,31,5,0],[11,34,5,0,"_interopRequireDefault"],[11,56,5,0],[11,57,5,0,"require"],[11,64,5,0],[11,65,5,0,"_dependencyMap"],[11,79,5,0],[12,2,6,0],[12,6,6,0,"_getDevicePushTokenAsync"],[12,30,6,0],[12,33,6,0,"_interopRequireDefault"],[12,55,6,0],[12,56,6,0,"require"],[12,63,6,0],[12,64,6,0,"_dependencyMap"],[12,78,6,0],[13,2,6,64],[13,11,6,64,"_interopRequireWildcard"],[13,35,6,64,"e"],[13,36,6,64],[13,38,6,64,"t"],[13,39,6,64],[13,68,6,64,"WeakMap"],[13,75,6,64],[13,81,6,64,"r"],[13,82,6,64],[13,89,6,64,"WeakMap"],[13,96,6,64],[13,100,6,64,"n"],[13,101,6,64],[13,108,6,64,"WeakMap"],[13,115,6,64],[13,127,6,64,"_interopRequireWildcard"],[13,150,6,64],[13,162,6,64,"_interopRequireWildcard"],[13,163,6,64,"e"],[13,164,6,64],[13,166,6,64,"t"],[13,167,6,64],[13,176,6,64,"t"],[13,177,6,64],[13,181,6,64,"e"],[13,182,6,64],[13,186,6,64,"e"],[13,187,6,64],[13,188,6,64,"__esModule"],[13,198,6,64],[13,207,6,64,"e"],[13,208,6,64],[13,214,6,64,"o"],[13,215,6,64],[13,217,6,64,"i"],[13,218,6,64],[13,220,6,64,"f"],[13,221,6,64],[13,226,6,64,"__proto__"],[13,235,6,64],[13,243,6,64,"default"],[13,250,6,64],[13,252,6,64,"e"],[13,253,6,64],[13,270,6,64,"e"],[13,271,6,64],[13,294,6,64,"e"],[13,295,6,64],[13,320,6,64,"e"],[13,321,6,64],[13,330,6,64,"f"],[13,331,6,64],[13,337,6,64,"o"],[13,338,6,64],[13,341,6,64,"t"],[13,342,6,64],[13,345,6,64,"n"],[13,346,6,64],[13,349,6,64,"r"],[13,350,6,64],[13,358,6,64,"o"],[13,359,6,64],[13,360,6,64,"has"],[13,363,6,64],[13,364,6,64,"e"],[13,365,6,64],[13,375,6,64,"o"],[13,376,6,64],[13,377,6,64,"get"],[13,380,6,64],[13,381,6,64,"e"],[13,382,6,64],[13,385,6,64,"o"],[13,386,6,64],[13,387,6,64,"set"],[13,390,6,64],[13,391,6,64,"e"],[13,392,6,64],[13,394,6,64,"f"],[13,395,6,64],[13,411,6,64,"t"],[13,412,6,64],[13,416,6,64,"e"],[13,417,6,64],[13,433,6,64,"t"],[13,434,6,64],[13,441,6,64,"hasOwnProperty"],[13,455,6,64],[13,456,6,64,"call"],[13,460,6,64],[13,461,6,64,"e"],[13,462,6,64],[13,464,6,64,"t"],[13,465,6,64],[13,472,6,64,"i"],[13,473,6,64],[13,477,6,64,"o"],[13,478,6,64],[13,481,6,64,"Object"],[13,487,6,64],[13,488,6,64,"defineProperty"],[13,502,6,64],[13,507,6,64,"Object"],[13,513,6,64],[13,514,6,64,"getOwnPropertyDescriptor"],[13,538,6,64],[13,539,6,64,"e"],[13,540,6,64],[13,542,6,64,"t"],[13,543,6,64],[13,550,6,64,"i"],[13,551,6,64],[13,552,6,64,"get"],[13,555,6,64],[13,559,6,64,"i"],[13,560,6,64],[13,561,6,64,"set"],[13,564,6,64],[13,568,6,64,"o"],[13,569,6,64],[13,570,6,64,"f"],[13,571,6,64],[13,573,6,64,"t"],[13,574,6,64],[13,576,6,64,"i"],[13,577,6,64],[13,581,6,64,"f"],[13,582,6,64],[13,583,6,64,"t"],[13,584,6,64],[13,588,6,64,"e"],[13,589,6,64],[13,590,6,64,"t"],[13,591,6,64],[13,602,6,64,"f"],[13,603,6,64],[13,608,6,64,"e"],[13,609,6,64],[13,611,6,64,"t"],[13,612,6,64],[14,2,7,0],[14,8,7,6,"productionBaseUrl"],[14,25,7,23],[14,28,7,26],[14,57,7,55],[15,2,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,2,45,15],[52,17,45,30,"getExpoPushTokenAsync"],[52,38,45,51,"getExpoPushTokenAsync"],[52,39,45,52,"options"],[52,46,45,59],[52,49,45,62],[52,50,45,63],[52,51,45,64],[52,53,45,66],[53,4,46,4],[53,10,46,10,"devicePushToken"],[53,25,46,25],[53,28,46,28,"options"],[53,35,46,35],[53,36,46,36,"devicePushToken"],[53,51,46,51],[53,56,46,56],[53,62,46,62],[53,66,46,62,"getDevicePushTokenAsync"],[53,98,46,85],[53,100,46,86],[53,101,46,87],[53,102,46,88],[54,4,47,4],[54,10,47,10,"deviceId"],[54,18,47,18],[54,21,47,21,"options"],[54,28,47,28],[54,29,47,29,"deviceId"],[54,37,47,37],[54,42,47,42],[54,48,47,48,"getDeviceIdAsync"],[54,64,47,64],[54,65,47,65],[54,66,47,66],[54,67,47,67],[55,4,48,4],[56,4,49,4],[56,10,49,10,"projectId"],[56,19,49,19],[56,22,49,22,"options"],[56,29,49,29],[56,30,49,30,"projectId"],[56,39,49,39],[56,43,50,8,"Constants"],[56,65,50,17],[56,66,50,18,"easConfig"],[56,75,50,27],[56,77,50,29,"projectId"],[56,86,50,38],[56,90,51,8,"Constants"],[56,112,51,17],[56,113,51,18,"expoConfig"],[56,123,51,28],[56,125,51,30,"extra"],[56,130,51,35],[56,132,51,37,"eas"],[56,135,51,40],[56,137,51,42,"projectId"],[56,146,51,51],[57,4,52,4],[57,8,52,8],[57,9,52,9,"projectId"],[57,18,52,18],[57,20,52,20],[58,6,53,8],[58,12,53,14],[58,16,53,18,"CodedError"],[58,43,53,28],[58,44,53,29],[58,80,53,65],[58,82,53,67],[58,223,53,208],[58,224,53,209],[59,4,54,4],[60,4,55,4],[60,10,55,10,"applicationId"],[60,23,55,23],[60,26,55,26,"options"],[60,33,55,33],[60,34,55,34,"applicationId"],[60,47,55,47],[60,51,55,51,"Application"],[60,62,55,62],[60,63,55,63,"applicationId"],[60,76,55,76],[61,4,56,4],[61,8,56,8],[61,9,56,9,"applicationId"],[61,22,56,22],[61,24,56,24],[62,6,57,8],[62,12,57,14],[62,16,57,18,"CodedError"],[62,43,57,28],[62,44,57,29],[62,81,57,66],[62,83,57,68],[62,214,57,199],[62,215,57,200],[63,4,58,4],[64,4,59,4],[64,10,59,10,"type"],[64,14,59,14],[64,17,59,17,"options"],[64,24,59,24],[64,25,59,25,"type"],[64,29,59,29],[64,33,59,33,"getTypeOfToken"],[64,47,59,47],[64,48,59,48,"devicePushToken"],[64,63,59,63],[64,64,59,64],[65,4,60,4],[65,10,60,10,"development"],[65,21,60,21],[65,24,60,24,"options"],[65,31,60,31],[65,32,60,32,"development"],[65,43,60,43],[65,48,60,48],[65,54,60,54,"shouldUseDevelopmentNotificationService"],[65,93,60,93],[65,94,60,94],[65,95,60,95],[65,96,60,96],[66,4,61,4],[66,10,61,10,"baseUrl"],[66,17,61,17],[66,20,61,20,"options"],[66,27,61,27],[66,28,61,28,"baseUrl"],[66,35,61,35],[66,39,61,39,"productionBaseUrl"],[66,56,61,56],[67,4,62,4],[67,10,62,10,"url"],[67,13,62,13],[67,16,62,16,"options"],[67,23,62,23],[67,24,62,24,"url"],[67,27,62,27],[67,31,62,31],[67,34,62,34,"baseUrl"],[67,41,62,41],[67,64,62,64],[68,4,63,4],[68,10,63,10,"body"],[68,14,63,14],[68,17,63,17],[69,6,64,8,"type"],[69,10,64,12],[70,6,65,8,"deviceId"],[70,14,65,16],[70,16,65,18,"deviceId"],[70,24,65,26],[70,25,65,27,"toLowerCase"],[70,36,65,38],[70,37,65,39],[70,38,65,40],[71,6,66,8,"development"],[71,17,66,19],[72,6,67,8,"appId"],[72,11,67,13],[72,13,67,15,"applicationId"],[72,26,67,28],[73,6,68,8,"deviceToken"],[73,17,68,19],[73,19,68,21,"getDeviceToken"],[73,33,68,35],[73,34,68,36,"devicePushToken"],[73,49,68,51],[73,50,68,52],[74,6,69,8,"projectId"],[75,4,70,4],[75,5,70,5],[76,4,71,4],[76,10,71,10,"response"],[76,18,71,18],[76,21,71,21],[76,27,71,27,"fetch"],[76,32,71,32],[76,33,71,33,"url"],[76,36,71,36],[76,38,71,38],[77,6,72,8,"method"],[77,12,72,14],[77,14,72,16],[77,20,72,22],[78,6,73,8,"headers"],[78,13,73,15],[78,15,73,17],[79,8,74,12],[79,22,74,26],[79,24,74,28],[80,6,75,8],[80,7,75,9],[81,6,76,8,"body"],[81,10,76,12],[81,12,76,14,"JSON"],[81,16,76,18],[81,17,76,19,"stringify"],[81,26,76,28],[81,27,76,29,"body"],[81,31,76,33],[82,4,77,4],[82,5,77,5],[82,6,77,6],[82,7,77,7,"catch"],[82,12,77,12],[82,13,77,14,"error"],[82,18,77,19],[82,22,77,24],[83,6,78,8],[83,12,78,14],[83,16,78,18,"CodedError"],[83,43,78,28],[83,44,78,29],[83,77,78,62],[83,79,78,64],[83,127,78,112,"error"],[83,132,78,117],[83,135,78,120],[83,136,78,121],[84,4,79,4],[84,5,79,5],[84,6,79,6],[85,4,80,4],[85,8,80,8],[85,9,80,9,"response"],[85,17,80,17],[85,18,80,18,"ok"],[85,20,80,20],[85,22,80,22],[86,6,81,8],[86,12,81,14,"statusInfo"],[86,22,81,24],[86,25,81,27,"response"],[86,33,81,35],[86,34,81,36,"statusText"],[86,44,81,46],[86,48,81,50,"response"],[86,56,81,58],[86,57,81,59,"status"],[86,63,81,65],[87,6,82,8],[87,10,82,12,"body"],[87,14,82,16],[87,17,82,19,"undefined"],[87,26,82,28],[88,6,83,8],[88,10,83,12],[89,8,84,12,"body"],[89,12,84,16],[89,15,84,19],[89,21,84,25,"response"],[89,29,84,33],[89,30,84,34,"text"],[89,34,84,38],[89,35,84,39],[89,36,84,40],[90,6,85,8],[90,7,85,9],[90,8,86,8],[90,14,86,14],[91,8,87,12],[92,6,87,12],[93,6,89,8],[93,12,89,14],[93,16,89,18,"CodedError"],[93,43,89,28],[93,44,89,29],[93,76,89,61],[93,78,89,63],[93,161,89,146,"statusInfo"],[93,171,89,156],[93,183,89,168,"body"],[93,187,89,172],[93,192,89,177],[93,193,89,178],[94,4,90,4],[95,4,91,4],[95,10,91,10,"expoPushToken"],[95,23,91,23],[95,26,91,26,"getExpoPushToken"],[95,42,91,42],[95,43,91,43],[95,49,91,49,"parseResponse"],[95,62,91,62],[95,63,91,63,"response"],[95,71,91,71],[95,72,91,72],[95,73,91,73],[96,4,92,4],[96,8,92,8],[97,6,93,8],[97,10,93,12,"options"],[97,17,93,19],[97,18,93,20,"url"],[97,21,93,23],[97,25,93,27,"options"],[97,32,93,34],[97,33,93,35,"baseUrl"],[97,40,93,42],[97,42,93,44],[98,8,94,12,"console"],[98,15,94,19],[98,16,94,20,"debug"],[98,21,94,25],[98,22,94,26],[98,199,94,203],[98,200,94,204],[99,6,95,8],[99,7,95,9],[99,13,96,13],[100,8,97,12],[100,14,97,18],[100,18,97,18,"setAutoServerRegistrationEnabledAsync"],[100,88,97,55],[100,90,97,56],[100,94,97,60],[100,95,97,61],[101,6,98,8],[102,4,99,4],[102,5,99,5],[102,6,100,4],[102,13,100,11,"e"],[102,14,100,12],[102,16,100,14],[103,6,101,8,"console"],[103,13,101,15],[103,14,101,16,"warn"],[103,18,101,20],[103,19,101,21],[103,137,101,139],[103,139,101,141,"e"],[103,140,101,142],[103,141,101,143],[104,4,102,4],[105,4,103,4],[105,11,103,11],[106,6,104,8,"type"],[106,10,104,12],[106,12,104,14],[106,18,104,20],[107,6,105,8,"data"],[107,10,105,12],[107,12,105,14,"expoPushToken"],[108,4,106,4],[108,5,106,5],[109,2,107,0],[110,2,108,0],[110,17,108,15,"parseResponse"],[110,30,108,28,"parseResponse"],[110,31,108,29,"response"],[110,39,108,37],[110,41,108,39],[111,4,109,4],[111,8,109,8],[112,6,110,8],[112,13,110,15],[112,19,110,21,"response"],[112,27,110,29],[112,28,110,30,"json"],[112,32,110,34],[112,33,110,35],[112,34,110,36],[113,4,111,4],[113,5,111,5],[113,6,112,4],[113,12,112,10],[114,6,113,8],[114,10,113,12],[115,8,114,12],[115,14,114,18],[115,18,114,22,"CodedError"],[115,45,114,32],[115,46,114,33],[115,78,114,65],[115,80,114,67],[115,161,114,148,"JSON"],[115,165,114,152],[115,166,114,153,"stringify"],[115,175,114,162],[115,176,114,163],[115,182,114,169,"response"],[115,190,114,177],[115,191,114,178,"text"],[115,195,114,182],[115,196,114,183],[115,197,114,184],[115,198,114,185],[115,201,114,188],[115,202,114,189],[116,6,115,8],[116,7,115,9],[116,8,116,8],[116,14,116,14],[117,8,117,12],[117,14,117,18],[117,18,117,22,"CodedError"],[117,45,117,32],[117,46,117,33],[117,78,117,65],[117,80,117,67],[117,165,117,152,"JSON"],[117,169,117,156],[117,170,117,157,"stringify"],[117,179,117,166],[117,180,117,167,"response"],[117,188,117,175],[117,189,117,176],[117,192,117,179],[117,193,117,180],[118,6,118,8],[119,4,119,4],[120,2,120,0],[121,2,121,0],[121,11,121,9,"getExpoPushToken"],[121,27,121,25,"getExpoPushToken"],[121,28,121,26,"data"],[121,32,121,30],[121,34,121,32],[122,4,122,4],[122,8,122,8],[122,9,122,9,"data"],[122,13,122,13],[122,17,123,8],[122,19,123,10],[122,26,123,17,"data"],[122,30,123,21],[122,35,123,26],[122,43,123,34],[122,44,123,35],[122,48,124,8],[122,49,124,9,"data"],[122,53,124,13],[122,54,124,14,"data"],[122,58,124,18],[122,62,125,8],[122,64,125,10],[122,71,125,17,"data"],[122,75,125,21],[122,76,125,22,"data"],[122,80,125,26],[122,85,125,31],[122,93,125,39],[122,94,125,40],[122,98,126,8],[122,99,126,9,"data"],[122,103,126,13],[122,104,126,14,"data"],[122,108,126,18],[122,109,126,19,"expoPushToken"],[122,122,126,32],[122,126,127,8],[122,128,127,10],[122,135,127,17,"data"],[122,139,127,21],[122,140,127,22,"data"],[122,144,127,26],[122,145,127,27,"expoPushToken"],[122,158,127,40],[122,163,127,45],[122,171,127,53],[122,172,127,54],[122,174,127,56],[123,6,128,8],[123,12,128,14],[123,16,128,18,"CodedError"],[123,43,128,28],[123,44,128,29],[123,76,128,61],[123,78,128,63],[123,171,128,156,"JSON"],[123,175,128,160],[123,176,128,161,"stringify"],[123,185,128,170],[123,186,128,171,"data"],[123,190,128,175],[123,192,128,177],[123,196,128,181],[123,198,128,183],[123,199,128,184],[123,200,128,185],[123,203,128,188],[123,204,128,189],[124,4,129,4],[125,4,130,4],[125,11,130,11,"data"],[125,15,130,15],[125,16,130,16,"data"],[125,20,130,20],[125,21,130,21,"expoPushToken"],[125,34,130,34],[126,2,131,0],[127,2,132,0],[128,2,133,0],[128,17,133,15,"getDeviceIdAsync"],[128,33,133,31,"getDeviceIdAsync"],[128,34,133,31],[128,36,133,34],[129,4,134,4],[129,8,134,8],[130,6,135,8],[130,10,135,12],[130,11,135,13,"ServerRegistrationModule"],[130,44,135,37],[130,45,135,38,"getInstallationIdAsync"],[130,67,135,60],[130,69,135,62],[131,8,136,12],[131,14,136,18],[131,18,136,22,"UnavailabilityError"],[131,54,136,41],[131,55,136,42],[131,85,136,72],[131,87,136,74],[131,111,136,98],[131,112,136,99],[132,6,137,8],[133,6,138,8],[133,13,138,15],[133,19,138,21,"ServerRegistrationModule"],[133,52,138,45],[133,53,138,46,"getInstallationIdAsync"],[133,75,138,68],[133,76,138,69],[133,77,138,70],[134,4,139,4],[134,5,139,5],[134,6,140,4],[134,13,140,11,"e"],[134,14,140,12],[134,16,140,14],[135,6,141,8],[135,12,141,14],[135,16,141,18,"CodedError"],[135,43,141,28],[135,44,141,29],[135,65,141,50],[135,67,141,52],[135,129,141,114,"e"],[135,130,141,115],[135,133,141,118],[135,134,141,119],[136,4,142,4],[137,2,143,0],[138,2,144,0],[138,11,144,9,"getDeviceToken"],[138,25,144,23,"getDeviceToken"],[138,26,144,24,"devicePushToken"],[138,41,144,39],[138,43,144,41],[139,4,145,4],[139,8,145,8],[139,15,145,15,"devicePushToken"],[139,30,145,30],[139,31,145,31,"data"],[139,35,145,35],[139,40,145,40],[139,48,145,48],[139,50,145,50],[140,6,146,8],[140,13,146,15,"devicePushToken"],[140,28,146,30],[140,29,146,31,"data"],[140,33,146,35],[141,4,147,4],[142,4,148,4],[142,11,148,11,"JSON"],[142,15,148,15],[142,16,148,16,"stringify"],[142,25,148,25],[142,26,148,26,"devicePushToken"],[142,41,148,41],[142,42,148,42,"data"],[142,46,148,46],[142,47,148,47],[143,2,149,0],[144,2,150,0],[145,2,151,0],[145,17,151,15,"shouldUseDevelopmentNotificationService"],[145,56,151,54,"shouldUseDevelopmentNotificationService"],[145,57,151,54],[145,59,151,57],[146,4,152,4],[146,8,152,8,"Platform"],[146,33,152,16],[146,34,152,17,"OS"],[146,36,152,19],[146,41,152,24],[146,46,152,29],[146,48,152,31],[147,6,153,8],[147,10,153,12],[148,8,154,12],[148,14,154,18,"notificationServiceEnvironment"],[148,44,154,48],[148,47,154,51],[148,53,154,57,"Application"],[148,64,154,68],[148,65,154,69,"getIosPushNotificationServiceEnvironmentAsync"],[148,110,154,114],[148,111,154,115],[148,112,154,116],[149,8,155,12],[149,12,155,16,"notificationServiceEnvironment"],[149,42,155,46],[149,47,155,51],[149,60,155,64],[149,62,155,66],[150,10,156,16],[150,17,156,23],[150,21,156,27],[151,8,157,12],[152,6,158,8],[152,7,158,9],[152,8,159,8],[152,14,159,14],[153,8,160,12],[154,6,160,12],[155,4,162,4],[156,4,163,4],[156,11,163,11],[156,16,163,16],[157,2,164,0],[158,2,165,0],[159,2,166,0],[159,11,166,9,"getTypeOfToken"],[159,25,166,23,"getTypeOfToken"],[159,26,166,24,"devicePushToken"],[159,41,166,39],[159,43,166,41],[160,4,167,4],[160,12,167,12,"devicePushToken"],[160,27,167,27],[160,28,167,28,"type"],[160,32,167,32],[161,6,168,8],[161,11,168,13],[161,16,168,18],[162,8,169,12],[162,15,169,19],[162,21,169,25],[163,6,170,8],[163,11,170,13],[163,20,170,22],[164,8,171,12],[164,15,171,19],[164,20,171,24],[165,6,172,8],[166,6,173,8],[167,8,174,12],[167,15,174,19,"devicePushToken"],[167,30,174,34],[167,31,174,35,"type"],[167,35,174,39],[168,4,175,4],[169,2,176,0],[170,0,176,1],[170,3]],"functionMap":{"names":["<global>","getExpoPushTokenAsync","fetch._catch$argument_0","parseResponse","getExpoPushToken","getDeviceIdAsync","getDeviceToken","shouldUseDevelopmentNotificationService","getTypeOfToken"],"mappings":"AAA;eC4C;aCgC;KDE;CD4B;AGC;CHY;AIC;CJU;AKE;CLU;AMC;CNK;AOE;CPa;AQE;CRU"}},"type":"js/module"}]}